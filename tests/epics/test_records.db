record(bo, "$(P)bool") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(VAL, "1")
  field(PINI, "YES")
}

record(longout, "$(P)int") {
  field(HOPR, "100")
  field(HIHI, "98")
  field(HIGH, "96")
  field(DRVH, "90")
  field(DRVL, "10")
  field(LOW, "5")
  field(LOLO, "2")
  field(LOPR, "0")
  field(VAL, "42")
  field(PINI, "YES")
}

record(ao, "$(P)float") {
  field(PREC, "1")
  field(EGU, "mm")
  field(VAL, "3.141")
  field(PINI, "YES")
}

record(stringout, "$(P)str") {
  field(VAL, "hello")
  field(PINI, "YES")
}

record(mbbo, "$(P)enum") {
  field(ZRST, "Aaa")
  field(ZRVL, "5")
  field(ONST, "Bbb")
  field(ONVL, "6")
  field(TWST, "Ccc")
  field(TWVL, "7")
  field(VAL, "1")
  field(PINI, "YES")
}

record(mbbo, "$(P)enum2") {
  field(ZRST, "Aaa")
  field(ONST, "Bbb")
  field(TWST, "Ccc")
  field(VAL, "1")
  field(PINI, "YES")
}

record(waveform, "$(P)int8a") {
  field(NELM, "3")
  field(FTVL, "CHAR")
  field(INP, {const:[-128, 127]})
  field(PINI, "YES")
}

record(waveform, "$(P)uint8a") {
  field(NELM, "3")
  field(FTVL, "UCHAR")
  field(INP, {const:[0, 255]})
  field(PINI, "YES")
}

record(waveform, "$(P)int16a") {
  field(NELM, "3")
  field(FTVL, "SHORT")
  field(INP, {const:[-32768, 32767]})
  field(PINI, "YES")
}

record(waveform, "$(P)uint16a") {
  field(NELM, "3")
  field(FTVL, "USHORT")
  field(INP, {const:[0, 65535]})
  field(PINI, "YES")
}

record(waveform, "$(P)int32a") {
  field(NELM, "3")
  field(FTVL, "LONG")
  field(INP, {const:[-2147483648, 2147483647]})
  field(PINI, "YES")
}

record(waveform, "$(P)uint32a") {
  field(NELM, "3")
  field(FTVL, "ULONG")
  field(INP, {const:[0, 4294967295]})
  field(PINI, "YES")
}

record(waveform, "$(P)int64a") {
  field(NELM, "3")
  field(FTVL, "INT64")
  # Can't do 64-bit int with JSON numbers in a const link...
  field(INP, {const:[-2147483649, 2147483648]})
  field(PINI, "YES")
}

record(waveform, "$(P)uint64a") {
  field(NELM, "3")
  field(FTVL, "UINT64")
  field(INP, {const:[0, 4294967297]})
  field(PINI, "YES")
}

record(waveform, "$(P)float32a") {
  field(NELM, "3")
  field(FTVL, "FLOAT")
  field(INP, {const:[0.000002, -123.123]})
  field(PINI, "YES")
}

record(waveform, "$(P)float64a") {
  field(NELM, "3")
  field(FTVL, "DOUBLE")
  field(INP, {const:[0.1, -12345678.123]})
  field(PINI, "YES")
}

record(waveform, "$(P)stra") {
  field(NELM, "3")
  field(FTVL, "STRING")
  field(INP, {const:["five", "six", "seven"]})
  field(PINI, "YES")
}

record(waveform, "$(P)longstr") {
  field(NELM, "80")
  field(FTVL, "CHAR")
  field(INP, {const:"a string that is just longer than forty characters"})
  field(PINI, "YES")
}

record(lsi, "$(P)longstr2") {
  field(SIZV, "80")
  field(INP, {const:"a string that is just longer than forty characters"})
  field(PINI, "YES")  
}

record(waveform, "$(P)table:labels") {
    field(FTVL, "STRING")
    field(NELM, "5")
    field(INP, {const:["Bool", "Int", "Float", "Str", "Enum"]})
    field(PINI, "YES")
    info(Q:group, {
        "$(P)table": {
            "+id": "epics:nt/NTTable:1.0",
            "labels": {
                "+type": "plain",
                "+channel": "VAL"
            }
        }
    })
}

record(waveform, "$(P)table:bool")
{
    field(FTVL, "UCHAR")
    field(NELM, "4096")
    field(INP, {const:[false, false, true, true]})
    field(PINI, "YES")
    info(Q:group, {
        "$(P)table": {
            "value.bool": {
                "+type": "plain",
                "+channel": "VAL",
                "+putorder": 1
            }
        }
    })
}

record(waveform, "$(P)table:int")
{
    field(FTVL, "LONG")
    field(NELM, "4096")
    field(INP, {const:[1, 8, -9, 32]})
    field(PINI, "YES")
    info(Q:group, {
        "$(P)table": {
            "value.int": {
                "+type": "plain",
                "+channel": "VAL",
                "+putorder": 2
            }
        }
    })
}

record(waveform, "$(P)table:float")
{
    field(FTVL, "DOUBLE")
    field(NELM, "4096")
    field(INP, {const:[1.8, 8.2, -6, 32.9887]})
    field(PINI, "YES")
    info(Q:group, {
        "$(P)table": {
            "value.float": {
                "+type": "plain",
                "+channel": "VAL",
                "+putorder": 3
            }
        }
    })
}

record(waveform, "$(P)table:str")
{
    field(FTVL, "STRING")
    field(NELM, "4096")
    field(INP, {const:["Hello", "World", "Foo", "Bar"]})
    field(PINI, "YES")
    info(Q:group, {
        "$(P)table": {
            "value.str": {
                "+type": "plain",
                "+channel": "VAL",
                "+putorder": 4
            }
        }
    })
}

record(waveform, "$(P)table:enum")
{
    field(FTVL, "STRING")
    field(NELM, "4096")
    field(INP, {const:["Aaa", "Bbb", "Aaa", "Ccc"]})
    field(PINI, "YES")
    info(Q:group, {
        "$(P)table": {
            "value.enum": {
                "+type": "plain",
                "+channel": "VAL",
                "+putorder": 5,
                "+trigger": "*",
            },
            "": {"+type": "meta", "+channel": "VAL"}
        }
    })
}

record(longout, "$(P)ntndarray:ArraySize0_RBV") {
    field(VAL, "3")
    field(PINI, "YES")
    info(Q:group, {
        "$(P)ntndarray":{
            "dimension[0].size":{+channel:"VAL", +type:"plain", +putorder:0}
        }
    })
}

record(longout, "$(P)ntndarray:ArraySize1_RBV") {
    field(VAL, "2")
    field(PINI, "YES")
    info(Q:group, {
        "$(P)ntndarray":{
            "dimension[1].size":{+channel:"VAL", +type:"plain", +putorder:0}
        }
    })
}

record(waveform, "$(P)ntndarray:data")
{
  field(FTVL, "INT64")
  field(NELM, "6")
  field(INP, {const:[0, 0, 0, 0, 0, 0]})
  field(PINI, "YES")
  info(Q:group, {
        "$(P)ntndarray":{
            +id:"epics:nt/NTNDArray:1.0",
            "value":{
                +type:"any",
                +channel:"VAL",
                +trigger:"*",
            },
            "": {+type:"meta", +channel:"SEVR"}
        }
    })
}
