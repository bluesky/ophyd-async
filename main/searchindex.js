Search.setIndex({"alltitles": {"1. Record architecture decisions": [[27, "record-architecture-decisions"]], "2. Adopt python-copier-template for project structure": [[28, "adopt-python-copier-template-for-project-structure"]], "3. Ophyd Async migration": [[29, "ophyd-async-migration"]], "4. Repository Structure": [[30, "repository-structure"]], "5. Respect black line length": [[31, "respect-black-line-length"]], "6. Procedural Device Definitions": [[32, "procedural-device-definitions"]], "7. Sub-package Structure": [[33, "sub-package-structure"]], "8. Settle on Signal Types": [[34, "settle-on-signal-types"]], "9. Procedural vs Declarative Devices": [[35, "procedural-vs-declarative-devices"]], "API": [[0, "api"]], "API Index": [[39, "api-index"]], "Arbitrary BaseModels not supported, pending use cases for them": [[34, "arbitrary-basemodels-not-supported-pending-use-cases-for-them"]], "Architectural Decision Records": [[26, "architectural-decision-records"]], "Assembly": [[42, "assembly"], [44, "assembly"]], "Async Context": [[37, "async-context"]], "Async Tests": [[47, "async-tests"]], "Behavior Diagram:": [[46, "behavior-diagram"]], "Check your version of python": [[50, "check-your-version-of-python"]], "Child Devices set parent on attach, and can\u2019t be public children of more than one parent": [[34, "child-devices-set-parent-on-attach-and-can-t-be-public-children-of-more-than-one-parent"]], "Clean Device Definition": [[36, "clean-device-definition"]], "Code Coverage": [[43, "code-coverage"]], "Compound Devices Together": [[42, "compound-devices-together"]], "Consequences": [[27, "consequences"], [28, "consequences"], [29, "consequences"], [30, "consequences"], [31, "consequences"], [32, "consequences"], [33, "consequences"], [34, "consequences"], [35, "consequences"]], "Context": [[27, "context"], [28, "context"], [29, "context"], [30, "context"], [31, "context"], [32, "context"], [33, "context"], [34, "context"], [35, "context"]], "Contribute to the project": [[43, "contribute-to-the-project"]], "Create Startup file": [[51, "create-startup-file"]], "Create a virtual environment": [[50, "create-a-virtual-environment"]], "Decision": [[27, "decision"], [28, "decision"], [29, "decision"], [30, "decision"], [31, "decision"], [32, "decision"], [33, "decision"], [34, "decision"], [35, "decision"]], "Decision Flowchart for Creating a New ophyd_async Device": [[41, "decision-flowchart-for-creating-a-new-ophyd-async-device"]], "Declarative Devices are now available": [[35, "declarative-devices-are-now-available"]], "Design Goals": [[36, "design-goals"]], "Developer Information": [[43, "developer-information"]], "Device Collector Event-Loop Choice": [[37, "device-collector-event-loop-choice"]], "Do a scan": [[51, "do-a-scan"]], "Epics signal module moves": [[35, "epics-signal-module-moves"]], "Example Usage": [[46, "example-usage"]], "Explanations": [[25, "explanations"]], "Flyscanning": [[38, "flyscanning"]], "Grouping by Index": [[42, "grouping-by-index"]], "Hardware": [[38, "hardware"]], "How-to Guides": [[40, "how-to-guides"]], "Improved Trajectory Calculation": [[36, "improved-trajectory-calculation"]], "Installation": [[50, "installation"]], "Installing the library": [[50, "installing-the-library"]], "Issue or Discussion?": [[43, "issue-or-discussion"]], "Make a Simple Device": [[44, "make-a-simple-device"]], "Make a StandardDetector": [[45, "make-a-standarddetector"]], "Mock Backend": [[47, "mock-backend"]], "Mock Utility Functions": [[47, "mock-utility-functions"]], "MockSignalBackend requires a real backend": [[34, "mocksignalbackend-requires-a-real-backend"]], "Movable": [[44, "movable"]], "Outstanding Design Decisions": [[36, "outstanding-design-decisions"]], "Parity with Malcolm": [[36, "parity-with-malcolm"]], "Parity with Ophyd": [[36, "parity-with-ophyd"]], "Readable": [[44, "readable"]], "Reference": [[48, "reference"]], "Role of Ophyd-Async": [[38, "role-of-ophyd-async"]], "Run IPython": [[51, "run-ipython"]], "Run some plans": [[51, "run-some-plans"]], "StandardReadable wrappers change to StandardReadableFormat": [[35, "standardreadable-wrappers-change-to-standardreadableformat"]], "Status": [[27, "status"], [28, "status"], [29, "status"], [30, "status"], [31, "status"], [32, "status"], [33, "status"], [34, "status"], [35, "status"]], "StrictEnum is now requried for all strictly checked Enums": [[34, "strictenum-is-now-requried-for-all-strictly-checked-enums"]], "SubsetEnum is now an Enum subclass:": [[34, "subsetenum-is-now-an-enum-subclass"]], "Sync Context": [[37, "sync-context"]], "Testing a Device in a Plan with the RunEngine": [[47, "testing-a-device-in-a-plan-with-the-runengine"]], "Tutorials": [[49, "tutorials"]], "Use Array1D for 1D arrays instead of npt.NDArray": [[34, "use-array1d-for-1d-arrays-instead-of-npt-ndarray"]], "Use Sequence[str] for arrays of strings instead of npt.NDArray[np.str_]": [[34, "use-sequence-str-for-arrays-of-strings-instead-of-npt-ndarray-np-str"]], "Use python primitives for scalar types instead of numpy types": [[34, "use-python-primitives-for-scalar-types-instead-of-numpy-types"]], "Using existing Devices": [[51, "using-existing-devices"]], "Write Tests for Devices": [[47, "write-tests-for-devices"]], "Writing a non-AreaDetector StandardDetector": [[45, "writing-a-non-areadetector-standarddetector"]], "Writing an AreaDetector StandardDetector": [[45, "writing-an-areadetector-standarddetector"]], "core": [[33, "core"]], "epics": [[33, "epics"]], "fastcs": [[33, "fastcs"]], "get_mock_put is no longer passed timeout as it is handled in Signal": [[34, "get-mock-put-is-no-longer-passed-timeout-as-it-is-handled-in-signal"]], "ophyd_async": [[1, "module-ophyd_async"]], "ophyd_async.core": [[2, "module-ophyd_async.core"]], "ophyd_async.epics": [[3, "module-ophyd_async.epics"]], "ophyd_async.epics.adaravis": [[4, "module-ophyd_async.epics.adaravis"]], "ophyd_async.epics.adcore": [[5, "module-ophyd_async.epics.adcore"]], "ophyd_async.epics.adkinetix": [[6, "module-ophyd_async.epics.adkinetix"]], "ophyd_async.epics.adpilatus": [[7, "module-ophyd_async.epics.adpilatus"]], "ophyd_async.epics.adsimdetector": [[8, "module-ophyd_async.epics.adsimdetector"]], "ophyd_async.epics.advimba": [[9, "module-ophyd_async.epics.advimba"]], "ophyd_async.epics.core": [[10, "module-ophyd_async.epics.core"]], "ophyd_async.epics.eiger": [[11, "module-ophyd_async.epics.eiger"]], "ophyd_async.epics.motor": [[12, "module-ophyd_async.epics.motor"]], "ophyd_async.epics.signal": [[13, "module-ophyd_async.epics.signal"]], "ophyd_async.epics.sim": [[14, "module-ophyd_async.epics.sim"]], "ophyd_async.epics.testing": [[15, "module-ophyd_async.epics.testing"]], "ophyd_async.fastcs": [[16, "module-ophyd_async.fastcs"]], "ophyd_async.fastcs.core": [[17, "module-ophyd_async.fastcs.core"]], "ophyd_async.fastcs.odin": [[18, "module-ophyd_async.fastcs.odin"]], "ophyd_async.fastcs.panda": [[19, "module-ophyd_async.fastcs.panda"]], "ophyd_async.plan_stubs": [[20, "module-ophyd_async.plan_stubs"]], "ophyd_async.sim": [[21, "module-ophyd_async.sim"]], "ophyd_async.tango": [[22, "module-ophyd_async.tango"]], "ophyd_async.tango.core": [[23, "module-ophyd_async.tango.core"]], "ophyd_async.tango.sim": [[24, "module-ophyd_async.tango.sim"]], "planstubs": [[33, "planstubs"]], "pvi structure changes": [[34, "pvi-structure-changes"], [35, "pvi-structure-changes"]], "set_and_wait_for_other_value": [[46, "set-and-wait-for-other-value"]], "sim": [[33, "sim"]], "super().__init__ required for Device subclasses": [[34, "super-init-required-for-device-subclasses"]], "tango": [[33, "tango"]]}, "docnames": ["_api", "_api/ophyd_async", "_api/ophyd_async.core", "_api/ophyd_async.epics", "_api/ophyd_async.epics.adaravis", "_api/ophyd_async.epics.adcore", "_api/ophyd_async.epics.adkinetix", "_api/ophyd_async.epics.adpilatus", "_api/ophyd_async.epics.adsimdetector", "_api/ophyd_async.epics.advimba", "_api/ophyd_async.epics.core", "_api/ophyd_async.epics.eiger", "_api/ophyd_async.epics.motor", "_api/ophyd_async.epics.signal", "_api/ophyd_async.epics.sim", "_api/ophyd_async.epics.testing", "_api/ophyd_async.fastcs", "_api/ophyd_async.fastcs.core", "_api/ophyd_async.fastcs.odin", "_api/ophyd_async.fastcs.panda", "_api/ophyd_async.plan_stubs", "_api/ophyd_async.sim", "_api/ophyd_async.tango", "_api/ophyd_async.tango.core", "_api/ophyd_async.tango.sim", "explanations", "explanations/decisions", "explanations/decisions/0001-record-architecture-decisions", "explanations/decisions/0002-switched-to-python-copier-template", "explanations/decisions/0003-ophyd-async-migration", "explanations/decisions/0004-repository-structure", "explanations/decisions/0005-respect-black-line-length", "explanations/decisions/0006-procedural-device-definitions", "explanations/decisions/0007-subpackage-structure", "explanations/decisions/0008-signal-types", "explanations/decisions/0009-procedural-vs-declarative-devices", "explanations/design-goals", "explanations/event-loop-choice", "explanations/flyscanning", "genindex", "how-to", "how-to/choose-interfaces-for-devices", "how-to/compound-devices", "how-to/contribute", "how-to/make-a-simple-device", "how-to/make-a-standard-detector", "how-to/use_set_and_wait_for_other_value", "how-to/write-tests-for-devices", "reference", "tutorials", "tutorials/installation", "tutorials/using-existing-devices"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["_api.rst", "_api/ophyd_async.rst", "_api/ophyd_async.core.rst", "_api/ophyd_async.epics.rst", "_api/ophyd_async.epics.adaravis.rst", "_api/ophyd_async.epics.adcore.rst", "_api/ophyd_async.epics.adkinetix.rst", "_api/ophyd_async.epics.adpilatus.rst", "_api/ophyd_async.epics.adsimdetector.rst", "_api/ophyd_async.epics.advimba.rst", "_api/ophyd_async.epics.core.rst", "_api/ophyd_async.epics.eiger.rst", "_api/ophyd_async.epics.motor.rst", "_api/ophyd_async.epics.signal.rst", "_api/ophyd_async.epics.sim.rst", "_api/ophyd_async.epics.testing.rst", "_api/ophyd_async.fastcs.rst", "_api/ophyd_async.fastcs.core.rst", "_api/ophyd_async.fastcs.odin.rst", "_api/ophyd_async.fastcs.panda.rst", "_api/ophyd_async.plan_stubs.rst", "_api/ophyd_async.sim.rst", "_api/ophyd_async.tango.rst", "_api/ophyd_async.tango.core.rst", "_api/ophyd_async.tango.sim.rst", "explanations.md", "explanations/decisions.md", "explanations/decisions/0001-record-architecture-decisions.md", "explanations/decisions/0002-switched-to-python-copier-template.md", "explanations/decisions/0003-ophyd-async-migration.rst", "explanations/decisions/0004-repository-structure.rst", "explanations/decisions/0005-respect-black-line-length.rst", "explanations/decisions/0006-procedural-device-definitions.rst", "explanations/decisions/0007-subpackage-structure.md", "explanations/decisions/0008-signal-types.md", "explanations/decisions/0009-procedural-vs-declarative-devices.md", "explanations/design-goals.rst", "explanations/event-loop-choice.rst", "explanations/flyscanning.rst", "genindex.rst", "how-to.md", "how-to/choose-interfaces-for-devices.md", "how-to/compound-devices.rst", "how-to/contribute.md", "how-to/make-a-simple-device.rst", "how-to/make-a-standard-detector.rst", "how-to/use_set_and_wait_for_other_value.md", "how-to/write-tests-for-devices.rst", "reference.md", "tutorials.md", "tutorials/installation.md", "tutorials/using-existing-devices.rst"], "indexentries": {"__version__ (in module ophyd_async)": [[1, "ophyd_async.__version__", false]], "add_children_as_readables() (ophyd_async.core.standardreadable method)": [[2, "ophyd_async.core.StandardReadable.add_children_as_readables", false]], "add_readables() (ophyd_async.core.standardreadable method)": [[2, "ophyd_async.core.StandardReadable.add_readables", false]], "apply_settings() (in module ophyd_async.plan_stubs)": [[20, "ophyd_async.plan_stubs.apply_settings", false]], "apply_settings_if_different() (in module ophyd_async.plan_stubs)": [[20, "ophyd_async.plan_stubs.apply_settings_if_different", false]], "aravisdetector (class in ophyd_async.epics.adaravis)": [[4, "ophyd_async.epics.adaravis.AravisDetector", false]], "aravisdriverio (class in ophyd_async.epics.adaravis)": [[4, "ophyd_async.epics.adaravis.AravisDriverIO", false]], "aravistriggermode (class in ophyd_async.epics.adaravis)": [[4, "ophyd_async.epics.adaravis.AravisTriggerMode", false]], "arm() (ophyd_async.core.detectorcontroller method)": [[2, "ophyd_async.core.DetectorController.arm", false]], "asyncstatus (class in ophyd_async.core)": [[2, "ophyd_async.core.AsyncStatus", false]], "child (ophyd_async.core.standardreadableformat attribute)": [[2, "ophyd_async.core.StandardReadableFormat.CHILD", false]], "clear_sub() (ophyd_async.core.signalr method)": [[2, "ophyd_async.core.SignalR.clear_sub", false]], "close() (ophyd_async.core.detectorwriter method)": [[2, "ophyd_async.core.DetectorWriter.close", false]], "collect_stream_docs() (ophyd_async.core.detectorwriter method)": [[2, "ophyd_async.core.DetectorWriter.collect_stream_docs", false]], "complete() (ophyd_async.epics.motor.motor method)": [[12, "ophyd_async.epics.motor.Motor.complete", false]], "config_ophyd_async_logging() (in module ophyd_async.core)": [[2, "ophyd_async.core.config_ophyd_async_logging", false]], "config_signal (ophyd_async.core.standardreadableformat attribute)": [[2, "ophyd_async.core.StandardReadableFormat.CONFIG_SIGNAL", false]], "connect() (ophyd_async.core.device method)": [[2, "ophyd_async.core.Device.connect", false]], "connect() (ophyd_async.core.signalbackend method)": [[2, "ophyd_async.core.SignalBackend.connect", false]], "connect_real() (ophyd_async.core.deviceconnector method)": [[2, "ophyd_async.core.DeviceConnector.connect_real", false]], "constant_gate (ophyd_async.core.detectortrigger attribute)": [[2, "ophyd_async.core.DetectorTrigger.CONSTANT_GATE", false]], "create_children_from_annotations() (ophyd_async.core.deviceconnector method)": [[2, "ophyd_async.core.DeviceConnector.create_children_from_annotations", false]], "deadtime (ophyd_async.core.triggerinfo attribute)": [[2, "ophyd_async.core.TriggerInfo.deadtime", false]], "describe() (ophyd_async.core.signalr method)": [[2, "ophyd_async.core.SignalR.describe", false]], "detectorcontroller (class in ophyd_async.core)": [[2, "ophyd_async.core.DetectorController", false]], "detectorstate (class in ophyd_async.epics.adcore)": [[5, "ophyd_async.epics.adcore.DetectorState", false]], "detectortrigger (class in ophyd_async.core)": [[2, "ophyd_async.core.DetectorTrigger", false]], "detectorwriter (class in ophyd_async.core)": [[2, "ophyd_async.core.DetectorWriter", false]], "device (class in ophyd_async.core)": [[2, "ophyd_async.core.Device", false]], "deviceconnector (class in ophyd_async.core)": [[2, "ophyd_async.core.DeviceConnector", false]], "devicevector (class in ophyd_async.core)": [[2, "ophyd_async.core.DeviceVector", false]], "disarm() (ophyd_async.core.detectorcontroller method)": [[2, "ophyd_async.core.DetectorController.disarm", false]], "edge_trigger (ophyd_async.core.detectortrigger attribute)": [[2, "ophyd_async.core.DetectorTrigger.EDGE_TRIGGER", false]], "eigerdetector (class in ophyd_async.epics.eiger)": [[11, "ophyd_async.epics.eiger.EigerDetector", false]], "end_position (ophyd_async.epics.motor.flymotorinfo attribute)": [[12, "ophyd_async.epics.motor.FlyMotorInfo.end_position", false]], "energymode (class in ophyd_async.epics.sim)": [[14, "ophyd_async.epics.sim.EnergyMode", false]], "epics_signal_r() (in module ophyd_async.epics.core)": [[10, "ophyd_async.epics.core.epics_signal_r", false]], "epics_signal_rw() (in module ophyd_async.epics.core)": [[10, "ophyd_async.epics.core.epics_signal_rw", false]], "epics_signal_rw_rbv() (in module ophyd_async.epics.core)": [[10, "ophyd_async.epics.core.epics_signal_rw_rbv", false]], "epics_signal_w() (in module ophyd_async.epics.core)": [[10, "ophyd_async.epics.core.epics_signal_w", false]], "epics_signal_x() (in module ophyd_async.epics.core)": [[10, "ophyd_async.epics.core.epics_signal_x", false]], "fly_and_collect() (in module ophyd_async.plan_stubs)": [[20, "ophyd_async.plan_stubs.fly_and_collect", false]], "frame_timeout (ophyd_async.core.triggerinfo attribute)": [[2, "ophyd_async.core.TriggerInfo.frame_timeout", false]], "get_datakey() (ophyd_async.core.signalbackend method)": [[2, "ophyd_async.core.SignalBackend.get_datakey", false]], "get_deadtime() (ophyd_async.core.detectorcontroller method)": [[2, "ophyd_async.core.DetectorController.get_deadtime", false]], "get_dtype() (in module ophyd_async.core)": [[2, "ophyd_async.core.get_dtype", false]], "get_enum_cls() (in module ophyd_async.core)": [[2, "ophyd_async.core.get_enum_cls", false]], "get_indices_written() (ophyd_async.core.detectorwriter method)": [[2, "ophyd_async.core.DetectorWriter.get_indices_written", false]], "get_reading() (ophyd_async.core.signalbackend method)": [[2, "ophyd_async.core.SignalBackend.get_reading", false]], "get_setpoint() (ophyd_async.core.signalbackend method)": [[2, "ophyd_async.core.SignalBackend.get_setpoint", false]], "get_unique() (in module ophyd_async.core)": [[2, "ophyd_async.core.get_unique", false]], "get_value() (ophyd_async.core.signalbackend method)": [[2, "ophyd_async.core.SignalBackend.get_value", false]], "get_value() (ophyd_async.core.signalr method)": [[2, "ophyd_async.core.SignalR.get_value", false]], "hdfdataset (class in ophyd_async.core)": [[2, "ophyd_async.core.HDFDataset", false]], "hdffile (class in ophyd_async.core)": [[2, "ophyd_async.core.HDFFile", false]], "high (ophyd_async.epics.sim.energymode attribute)": [[14, "ophyd_async.epics.sim.EnergyMode.HIGH", false]], "hinted_signal (ophyd_async.core.standardreadableformat attribute)": [[2, "ophyd_async.core.StandardReadableFormat.HINTED_SIGNAL", false]], "hinted_uncached_signal (ophyd_async.core.standardreadableformat attribute)": [[2, "ophyd_async.core.StandardReadableFormat.HINTED_UNCACHED_SIGNAL", false]], "in_micros() (in module ophyd_async.core)": [[2, "ophyd_async.core.in_micros", false]], "init_devices() (in module ophyd_async.core)": [[2, "ophyd_async.core.init_devices", false]], "internal (ophyd_async.core.detectortrigger attribute)": [[2, "ophyd_async.core.DetectorTrigger.INTERNAL", false]], "kickoff() (ophyd_async.epics.motor.motor method)": [[12, "ophyd_async.epics.motor.Motor.kickoff", false]], "kinetixdetector (class in ophyd_async.epics.adkinetix)": [[6, "ophyd_async.epics.adkinetix.KinetixDetector", false]], "kinetixdriverio (class in ophyd_async.epics.adkinetix)": [[6, "ophyd_async.epics.adkinetix.KinetixDriverIO", false]], "lazymock (class in ophyd_async.core)": [[2, "ophyd_async.core.LazyMock", false]], "livetime (ophyd_async.core.triggerinfo attribute)": [[2, "ophyd_async.core.TriggerInfo.livetime", false]], "locate() (ophyd_async.core.signalrw method)": [[2, "ophyd_async.core.SignalRW.locate", false]], "low (ophyd_async.epics.sim.energymode attribute)": [[14, "ophyd_async.epics.sim.EnergyMode.LOW", false]], "mocksignalbackend (class in ophyd_async.core)": [[2, "ophyd_async.core.MockSignalBackend", false]], "module": [[1, "module-ophyd_async", false], [2, "module-ophyd_async.core", false], [3, "module-ophyd_async.epics", false], [4, "module-ophyd_async.epics.adaravis", false], [5, "module-ophyd_async.epics.adcore", false], [6, "module-ophyd_async.epics.adkinetix", false], [7, "module-ophyd_async.epics.adpilatus", false], [8, "module-ophyd_async.epics.adsimdetector", false], [9, "module-ophyd_async.epics.advimba", false], [10, "module-ophyd_async.epics.core", false], [11, "module-ophyd_async.epics.eiger", false], [12, "module-ophyd_async.epics.motor", false], [13, "module-ophyd_async.epics.signal", false], [14, "module-ophyd_async.epics.sim", false], [15, "module-ophyd_async.epics.testing", false], [16, "module-ophyd_async.fastcs", false], [17, "module-ophyd_async.fastcs.core", false], [18, "module-ophyd_async.fastcs.odin", false], [19, "module-ophyd_async.fastcs.panda", false], [20, "module-ophyd_async.plan_stubs", false], [21, "module-ophyd_async.sim", false], [22, "module-ophyd_async.tango", false], [23, "module-ophyd_async.tango.core", false], [24, "module-ophyd_async.tango.sim", false]], "motor (class in ophyd_async.epics.motor)": [[12, "ophyd_async.epics.motor.Motor", false]], "mover (class in ophyd_async.epics.sim)": [[14, "ophyd_async.epics.sim.Mover", false]], "multiplier (ophyd_async.core.triggerinfo attribute)": [[2, "ophyd_async.core.TriggerInfo.multiplier", false]], "name (ophyd_async.core.device property)": [[2, "ophyd_async.core.Device.name", false]], "ndattributeparam (class in ophyd_async.epics.adcore)": [[5, "ophyd_async.epics.adcore.NDAttributeParam", false]], "ndattributepv (class in ophyd_async.epics.adcore)": [[5, "ophyd_async.epics.adcore.NDAttributePv", false]], "ndpluginstatsio (class in ophyd_async.epics.adcore)": [[5, "ophyd_async.epics.adcore.NDPluginStatsIO", false]], "notconnected": [[2, "ophyd_async.core.NotConnected", false]], "number_of_triggers (ophyd_async.core.triggerinfo attribute)": [[2, "ophyd_async.core.TriggerInfo.number_of_triggers", false]], "numpy_dtype() (ophyd_async.core.table method)": [[2, "ophyd_async.core.Table.numpy_dtype", false]], "numpy_table() (ophyd_async.core.table method)": [[2, "ophyd_async.core.Table.numpy_table", false]], "observe_indices_written() (ophyd_async.core.detectorwriter method)": [[2, "ophyd_async.core.DetectorWriter.observe_indices_written", false]], "observe_signals_value() (in module ophyd_async.core)": [[2, "ophyd_async.core.observe_signals_value", false]], "observe_value() (in module ophyd_async.core)": [[2, "ophyd_async.core.observe_value", false]], "open() (ophyd_async.core.detectorwriter method)": [[2, "ophyd_async.core.DetectorWriter.open", false]], "ophyd_async": [[1, "module-ophyd_async", false]], "ophyd_async.core": [[2, "module-ophyd_async.core", false]], "ophyd_async.epics": [[3, "module-ophyd_async.epics", false]], "ophyd_async.epics.adaravis": [[4, "module-ophyd_async.epics.adaravis", false]], "ophyd_async.epics.adcore": [[5, "module-ophyd_async.epics.adcore", false]], "ophyd_async.epics.adkinetix": [[6, "module-ophyd_async.epics.adkinetix", false]], "ophyd_async.epics.adpilatus": [[7, "module-ophyd_async.epics.adpilatus", false]], "ophyd_async.epics.adsimdetector": [[8, "module-ophyd_async.epics.adsimdetector", false]], "ophyd_async.epics.advimba": [[9, "module-ophyd_async.epics.advimba", false]], "ophyd_async.epics.core": [[10, "module-ophyd_async.epics.core", false]], "ophyd_async.epics.eiger": [[11, "module-ophyd_async.epics.eiger", false]], "ophyd_async.epics.motor": [[12, "module-ophyd_async.epics.motor", false]], "ophyd_async.epics.signal": [[13, "module-ophyd_async.epics.signal", false]], "ophyd_async.epics.sim": [[14, "module-ophyd_async.epics.sim", false]], "ophyd_async.epics.testing": [[15, "module-ophyd_async.epics.testing", false]], "ophyd_async.fastcs": [[16, "module-ophyd_async.fastcs", false]], "ophyd_async.fastcs.core": [[17, "module-ophyd_async.fastcs.core", false]], "ophyd_async.fastcs.odin": [[18, "module-ophyd_async.fastcs.odin", false]], "ophyd_async.fastcs.panda": [[19, "module-ophyd_async.fastcs.panda", false]], "ophyd_async.plan_stubs": [[20, "module-ophyd_async.plan_stubs", false]], "ophyd_async.sim": [[21, "module-ophyd_async.sim", false]], "ophyd_async.tango": [[22, "module-ophyd_async.tango", false]], "ophyd_async.tango.core": [[23, "module-ophyd_async.tango.core", false]], "ophyd_async.tango.sim": [[24, "module-ophyd_async.tango.sim", false]], "parent (ophyd_async.core.device attribute)": [[2, "ophyd_async.core.Device.parent", false]], "pathinfo (class in ophyd_async.core)": [[2, "ophyd_async.core.PathInfo", false]], "pilatusdetector (class in ophyd_async.epics.adpilatus)": [[7, "ophyd_async.epics.adpilatus.PilatusDetector", false]], "pilatusdriverio (class in ophyd_async.epics.adpilatus)": [[7, "ophyd_async.epics.adpilatus.PilatusDriverIO", false]], "pilatusreadouttime (class in ophyd_async.epics.adpilatus)": [[7, "ophyd_async.epics.adpilatus.PilatusReadoutTime", false]], "prepare() (ophyd_async.core.detectorcontroller method)": [[2, "ophyd_async.core.DetectorController.prepare", false]], "prepare() (ophyd_async.core.standarddetector method)": [[2, "ophyd_async.core.StandardDetector.prepare", false]], "prepare() (ophyd_async.epics.motor.motor method)": [[12, "ophyd_async.epics.motor.Motor.prepare", false]], "prepare_static_seq_table_flyer_and_detectors_with_same_trigger() (in module ophyd_async.plan_stubs)": [[20, "ophyd_async.plan_stubs.prepare_static_seq_table_flyer_and_detectors_with_same_trigger", false]], "proxy (ophyd_async.tango.core.tangoreadable attribute)": [[23, "ophyd_async.tango.core.TangoReadable.proxy", false]], "put() (ophyd_async.core.signalbackend method)": [[2, "ophyd_async.core.SignalBackend.put", false]], "pvsuffix (class in ophyd_async.epics.core)": [[10, "ophyd_async.epics.core.PvSuffix", false]], "read() (ophyd_async.core.signalr method)": [[2, "ophyd_async.core.SignalR.read", false]], "reference (class in ophyd_async.core)": [[2, "ophyd_async.core.Reference", false]], "retrieve_settings() (in module ophyd_async.plan_stubs)": [[20, "ophyd_async.plan_stubs.retrieve_settings", false]], "samplestage (class in ophyd_async.epics.sim)": [[14, "ophyd_async.epics.sim.SampleStage", false]], "sensor (class in ophyd_async.epics.sim)": [[14, "ophyd_async.epics.sim.Sensor", false]], "set() (ophyd_async.core.signalw method)": [[2, "ophyd_async.core.SignalW.set", false]], "set_and_wait_for_other_value() (in module ophyd_async.core)": [[2, "ophyd_async.core.set_and_wait_for_other_value", false]], "set_and_wait_for_value() (in module ophyd_async.core)": [[2, "ophyd_async.core.set_and_wait_for_value", false]], "set_callback() (ophyd_async.core.signalbackend method)": [[2, "ophyd_async.core.SignalBackend.set_callback", false]], "set_name() (ophyd_async.core.device method)": [[2, "ophyd_async.core.Device.set_name", false]], "signal (class in ophyd_async.core)": [[2, "ophyd_async.core.Signal", false]], "signalbackend (class in ophyd_async.core)": [[2, "ophyd_async.core.SignalBackend", false]], "signalr (class in ophyd_async.core)": [[2, "ophyd_async.core.SignalR", false]], "signalrw (class in ophyd_async.core)": [[2, "ophyd_async.core.SignalRW", false]], "signalw (class in ophyd_async.core)": [[2, "ophyd_async.core.SignalW", false]], "signalx (class in ophyd_async.core)": [[2, "ophyd_async.core.SignalX", false]], "soft_signal_r_and_setter() (in module ophyd_async.core)": [[2, "ophyd_async.core.soft_signal_r_and_setter", false]], "soft_signal_rw() (in module ophyd_async.core)": [[2, "ophyd_async.core.soft_signal_rw", false]], "softsignalbackend (class in ophyd_async.core)": [[2, "ophyd_async.core.SoftSignalBackend", false]], "source (ophyd_async.core.signal property)": [[2, "ophyd_async.core.Signal.source", false]], "source() (ophyd_async.core.signalbackend method)": [[2, "ophyd_async.core.SignalBackend.source", false]], "stage() (ophyd_async.core.signalr method)": [[2, "ophyd_async.core.SignalR.stage", false]], "standarddetector (class in ophyd_async.core)": [[2, "ophyd_async.core.StandardDetector", false]], "standardreadable (class in ophyd_async.core)": [[2, "ophyd_async.core.StandardReadable", false]], "standardreadableformat (class in ophyd_async.core)": [[2, "ophyd_async.core.StandardReadableFormat", false]], "start_position (ophyd_async.epics.motor.flymotorinfo attribute)": [[12, "ophyd_async.epics.motor.FlyMotorInfo.start_position", false]], "store_settings() (in module ophyd_async.plan_stubs)": [[20, "ophyd_async.plan_stubs.store_settings", false]], "strictenum (class in ophyd_async.core)": [[2, "ophyd_async.core.StrictEnum", false]], "subscribe() (ophyd_async.core.signalr method)": [[2, "ophyd_async.core.SignalR.subscribe", false]], "subscribe_value() (ophyd_async.core.signalr method)": [[2, "ophyd_async.core.SignalR.subscribe_value", false]], "subsetenum (class in ophyd_async.core)": [[2, "ophyd_async.core.SubsetEnum", false]], "tango_signal_r() (in module ophyd_async.tango.core)": [[23, "ophyd_async.tango.core.tango_signal_r", false]], "tango_signal_rw() (in module ophyd_async.tango.core)": [[23, "ophyd_async.tango.core.tango_signal_rw", false]], "tango_signal_w() (in module ophyd_async.tango.core)": [[23, "ophyd_async.tango.core.tango_signal_w", false]], "tango_signal_x() (in module ophyd_async.tango.core)": [[23, "ophyd_async.tango.core.tango_signal_x", false]], "tangodevice (class in ophyd_async.tango.core)": [[23, "ophyd_async.tango.core.TangoDevice", false]], "tangopolling (class in ophyd_async.tango.core)": [[23, "ophyd_async.tango.core.TangoPolling", false]], "tangoreadable (class in ophyd_async.tango.core)": [[23, "ophyd_async.tango.core.TangoReadable", false]], "time_for_move (ophyd_async.epics.motor.flymotorinfo attribute)": [[12, "ophyd_async.epics.motor.FlyMotorInfo.time_for_move", false]], "time_resolved_fly_and_collect_with_static_seq_table() (in module ophyd_async.plan_stubs)": [[20, "ophyd_async.plan_stubs.time_resolved_fly_and_collect_with_static_seq_table", false]], "timeout (ophyd_async.epics.motor.flymotorinfo attribute)": [[12, "ophyd_async.epics.motor.FlyMotorInfo.timeout", false]], "total_number_of_triggers (ophyd_async.core.triggerinfo property)": [[2, "ophyd_async.core.TriggerInfo.total_number_of_triggers", false]], "trigger (ophyd_async.core.triggerinfo attribute)": [[2, "ophyd_async.core.TriggerInfo.trigger", false]], "trigger() (ophyd_async.core.signalx method)": [[2, "ophyd_async.core.SignalX.trigger", false]], "trl (ophyd_async.tango.core.tangoreadable attribute)": [[23, "ophyd_async.tango.core.TangoReadable.trl", false]], "uncached_signal (ophyd_async.core.standardreadableformat attribute)": [[2, "ophyd_async.core.StandardReadableFormat.UNCACHED_SIGNAL", false]], "unstage() (ophyd_async.core.signalr method)": [[2, "ophyd_async.core.SignalR.unstage", false]], "validate_array_dtypes() (ophyd_async.core.table class method)": [[2, "ophyd_async.core.Table.validate_array_dtypes", false]], "validate_lengths() (ophyd_async.core.table method)": [[2, "ophyd_async.core.Table.validate_lengths", false]], "variable_gate (ophyd_async.core.detectortrigger attribute)": [[2, "ophyd_async.core.DetectorTrigger.VARIABLE_GATE", false]], "vimbadetector (class in ophyd_async.epics.advimba)": [[9, "ophyd_async.epics.advimba.VimbaDetector", false]], "vimbadriverio (class in ophyd_async.epics.advimba)": [[9, "ophyd_async.epics.advimba.VimbaDriverIO", false]], "wait_for_connection() (in module ophyd_async.core)": [[2, "ophyd_async.core.wait_for_connection", false]], "wait_for_idle() (ophyd_async.core.detectorcontroller method)": [[2, "ophyd_async.core.DetectorController.wait_for_idle", false]], "wait_for_value() (in module ophyd_async.core)": [[2, "ophyd_async.core.wait_for_value", false]], "walk_rw_signals() (in module ophyd_async.core)": [[2, "ophyd_async.core.walk_rw_signals", false]], "watchableasyncstatus (class in ophyd_async.core)": [[2, "ophyd_async.core.WatchableAsyncStatus", false]], "watcherupdate (class in ophyd_async.core)": [[2, "ophyd_async.core.WatcherUpdate", false]], "wrap() (ophyd_async.core.asyncstatus class method)": [[2, "ophyd_async.core.AsyncStatus.wrap", false]], "wrap() (ophyd_async.core.watchableasyncstatus class method)": [[2, "ophyd_async.core.WatchableAsyncStatus.wrap", false]]}, "objects": {"": [[1, 0, 0, "-", "ophyd_async"]], "ophyd_async": [[1, 1, 1, "", "__version__"], [2, 0, 0, "-", "core"], [3, 0, 0, "-", "epics"], [16, 0, 0, "-", "fastcs"], [20, 0, 0, "-", "plan_stubs"], [21, 0, 0, "-", "sim"], [22, 0, 0, "-", "tango"]], "ophyd_async.core": [[2, 2, 1, "", "AsyncStatus"], [2, 2, 1, "", "DetectorController"], [2, 2, 1, "", "DetectorTrigger"], [2, 2, 1, "", "DetectorWriter"], [2, 2, 1, "", "Device"], [2, 2, 1, "", "DeviceConnector"], [2, 2, 1, "", "DeviceVector"], [2, 2, 1, "", "HDFDataset"], [2, 2, 1, "", "HDFFile"], [2, 2, 1, "", "LazyMock"], [2, 2, 1, "", "MockSignalBackend"], [2, 6, 1, "", "NotConnected"], [2, 2, 1, "", "PathInfo"], [2, 2, 1, "", "Reference"], [2, 2, 1, "", "Signal"], [2, 2, 1, "", "SignalBackend"], [2, 2, 1, "", "SignalR"], [2, 2, 1, "", "SignalRW"], [2, 2, 1, "", "SignalW"], [2, 2, 1, "", "SignalX"], [2, 2, 1, "", "SoftSignalBackend"], [2, 2, 1, "", "StandardDetector"], [2, 2, 1, "", "StandardReadable"], [2, 2, 1, "", "StandardReadableFormat"], [2, 2, 1, "", "StrictEnum"], [2, 2, 1, "", "SubsetEnum"], [2, 7, 1, "", "Table"], [2, 7, 1, "", "TriggerInfo"], [2, 2, 1, "", "WatchableAsyncStatus"], [2, 2, 1, "", "WatcherUpdate"], [2, 10, 1, "", "config_ophyd_async_logging"], [2, 10, 1, "", "get_dtype"], [2, 10, 1, "", "get_enum_cls"], [2, 10, 1, "", "get_unique"], [2, 10, 1, "", "in_micros"], [2, 10, 1, "", "init_devices"], [2, 10, 1, "", "observe_signals_value"], [2, 10, 1, "", "observe_value"], [2, 10, 1, "", "set_and_wait_for_other_value"], [2, 10, 1, "", "set_and_wait_for_value"], [2, 10, 1, "", "soft_signal_r_and_setter"], [2, 10, 1, "", "soft_signal_rw"], [2, 10, 1, "", "wait_for_connection"], [2, 10, 1, "", "wait_for_value"], [2, 10, 1, "", "walk_rw_signals"]], "ophyd_async.core.AsyncStatus": [[2, 3, 1, "", "wrap"]], "ophyd_async.core.DetectorController": [[2, 3, 1, "", "arm"], [2, 3, 1, "", "disarm"], [2, 3, 1, "", "get_deadtime"], [2, 3, 1, "", "prepare"], [2, 3, 1, "", "wait_for_idle"]], "ophyd_async.core.DetectorTrigger": [[2, 4, 1, "", "CONSTANT_GATE"], [2, 4, 1, "", "EDGE_TRIGGER"], [2, 4, 1, "", "INTERNAL"], [2, 4, 1, "", "VARIABLE_GATE"]], "ophyd_async.core.DetectorWriter": [[2, 3, 1, "", "close"], [2, 3, 1, "", "collect_stream_docs"], [2, 3, 1, "", "get_indices_written"], [2, 3, 1, "", "observe_indices_written"], [2, 3, 1, "", "open"]], "ophyd_async.core.Device": [[2, 3, 1, "", "connect"], [2, 5, 1, "", "name"], [2, 4, 1, "", "parent"], [2, 3, 1, "", "set_name"]], "ophyd_async.core.DeviceConnector": [[2, 3, 1, "", "connect_real"], [2, 3, 1, "", "create_children_from_annotations"]], "ophyd_async.core.Signal": [[2, 5, 1, "", "source"]], "ophyd_async.core.SignalBackend": [[2, 3, 1, "", "connect"], [2, 3, 1, "", "get_datakey"], [2, 3, 1, "", "get_reading"], [2, 3, 1, "", "get_setpoint"], [2, 3, 1, "", "get_value"], [2, 3, 1, "", "put"], [2, 3, 1, "", "set_callback"], [2, 3, 1, "", "source"]], "ophyd_async.core.SignalR": [[2, 3, 1, "", "clear_sub"], [2, 3, 1, "", "describe"], [2, 3, 1, "", "get_value"], [2, 3, 1, "", "read"], [2, 3, 1, "", "stage"], [2, 3, 1, "", "subscribe"], [2, 3, 1, "", "subscribe_value"], [2, 3, 1, "", "unstage"]], "ophyd_async.core.SignalRW": [[2, 3, 1, "", "locate"]], "ophyd_async.core.SignalW": [[2, 3, 1, "", "set"]], "ophyd_async.core.SignalX": [[2, 3, 1, "", "trigger"]], "ophyd_async.core.StandardDetector": [[2, 3, 1, "", "prepare"]], "ophyd_async.core.StandardReadable": [[2, 3, 1, "", "add_children_as_readables"], [2, 3, 1, "", "add_readables"]], "ophyd_async.core.StandardReadableFormat": [[2, 4, 1, "", "CHILD"], [2, 4, 1, "", "CONFIG_SIGNAL"], [2, 4, 1, "", "HINTED_SIGNAL"], [2, 4, 1, "", "HINTED_UNCACHED_SIGNAL"], [2, 4, 1, "", "UNCACHED_SIGNAL"]], "ophyd_async.core.Table": [[2, 3, 1, "", "numpy_dtype"], [2, 3, 1, "", "numpy_table"], [2, 8, 1, "", "validate_array_dtypes"], [2, 8, 1, "", "validate_lengths"]], "ophyd_async.core.TriggerInfo": [[2, 9, 1, "", "deadtime"], [2, 9, 1, "", "frame_timeout"], [2, 9, 1, "", "livetime"], [2, 9, 1, "", "multiplier"], [2, 9, 1, "", "number_of_triggers"], [2, 5, 1, "", "total_number_of_triggers"], [2, 9, 1, "", "trigger"]], "ophyd_async.core.WatchableAsyncStatus": [[2, 3, 1, "", "wrap"]], "ophyd_async.epics": [[4, 0, 0, "-", "adaravis"], [5, 0, 0, "-", "adcore"], [6, 0, 0, "-", "adkinetix"], [7, 0, 0, "-", "adpilatus"], [8, 0, 0, "-", "adsimdetector"], [9, 0, 0, "-", "advimba"], [10, 0, 0, "-", "core"], [11, 0, 0, "-", "eiger"], [12, 0, 0, "-", "motor"], [13, 0, 0, "-", "signal"], [14, 0, 0, "-", "sim"], [15, 0, 0, "-", "testing"]], "ophyd_async.epics.adaravis": [[4, 2, 1, "", "AravisDetector"], [4, 2, 1, "", "AravisDriverIO"], [4, 2, 1, "", "AravisTriggerMode"]], "ophyd_async.epics.adcore": [[5, 2, 1, "", "DetectorState"], [5, 2, 1, "", "NDAttributeParam"], [5, 2, 1, "", "NDAttributePv"], [5, 2, 1, "", "NDPluginStatsIO"]], "ophyd_async.epics.adkinetix": [[6, 2, 1, "", "KinetixDetector"], [6, 2, 1, "", "KinetixDriverIO"]], "ophyd_async.epics.adpilatus": [[7, 2, 1, "", "PilatusDetector"], [7, 2, 1, "", "PilatusDriverIO"], [7, 2, 1, "", "PilatusReadoutTime"]], "ophyd_async.epics.advimba": [[9, 2, 1, "", "VimbaDetector"], [9, 2, 1, "", "VimbaDriverIO"]], "ophyd_async.epics.core": [[10, 2, 1, "", "PvSuffix"], [10, 10, 1, "", "epics_signal_r"], [10, 10, 1, "", "epics_signal_rw"], [10, 10, 1, "", "epics_signal_rw_rbv"], [10, 10, 1, "", "epics_signal_w"], [10, 10, 1, "", "epics_signal_x"]], "ophyd_async.epics.eiger": [[11, 2, 1, "", "EigerDetector"]], "ophyd_async.epics.motor": [[12, 7, 1, "", "FlyMotorInfo"], [12, 2, 1, "", "Motor"]], "ophyd_async.epics.motor.FlyMotorInfo": [[12, 9, 1, "", "end_position"], [12, 9, 1, "", "start_position"], [12, 9, 1, "", "time_for_move"], [12, 9, 1, "", "timeout"]], "ophyd_async.epics.motor.Motor": [[12, 3, 1, "", "complete"], [12, 3, 1, "", "kickoff"], [12, 3, 1, "", "prepare"]], "ophyd_async.epics.sim": [[14, 2, 1, "", "EnergyMode"], [14, 2, 1, "", "Mover"], [14, 2, 1, "", "SampleStage"], [14, 2, 1, "", "Sensor"]], "ophyd_async.epics.sim.EnergyMode": [[14, 4, 1, "", "HIGH"], [14, 4, 1, "", "LOW"]], "ophyd_async.fastcs": [[17, 0, 0, "-", "core"], [18, 0, 0, "-", "odin"], [19, 0, 0, "-", "panda"]], "ophyd_async.plan_stubs": [[20, 10, 1, "", "apply_settings"], [20, 10, 1, "", "apply_settings_if_different"], [20, 10, 1, "", "fly_and_collect"], [20, 10, 1, "", "prepare_static_seq_table_flyer_and_detectors_with_same_trigger"], [20, 10, 1, "", "retrieve_settings"], [20, 10, 1, "", "store_settings"], [20, 10, 1, "", "time_resolved_fly_and_collect_with_static_seq_table"]], "ophyd_async.tango": [[23, 0, 0, "-", "core"], [24, 0, 0, "-", "sim"]], "ophyd_async.tango.core": [[23, 2, 1, "", "TangoDevice"], [23, 2, 1, "", "TangoPolling"], [23, 2, 1, "", "TangoReadable"], [23, 10, 1, "", "tango_signal_r"], [23, 10, 1, "", "tango_signal_rw"], [23, 10, 1, "", "tango_signal_w"], [23, 10, 1, "", "tango_signal_x"]], "ophyd_async.tango.core.TangoReadable": [[23, 4, 1, "", "proxy"], [23, 4, 1, "", "trl"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"], "7": ["py", "pydantic_model", "Python model"], "8": ["py", "pydantic_validator", "Python validator"], "9": ["py", "pydantic_field", "Python field"], "10": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:property", "6": "py:exception", "7": "py:pydantic_model", "8": "py:pydantic_validator", "9": "py:pydantic_field", "10": "py:function"}, "terms": {"": [2, 20, 26, 27, 29, 31, 33, 34, 38, 41, 43, 46], "0": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 34, 35, 42, 44, 45, 47, 51], "000000008": 45, "001": 45, "01": [2, 11, 35, 51], "03d": 2, "04": 33, "07": 30, "08": [29, 31], "09": [30, 32], "0x7f45abfef140": 51, "0x7f45abfefa40": 51, "0x7f45abfefc40": 51, "0x7f45d15cb940": 51, "1": [2, 4, 5, 7, 10, 14, 20, 23, 26, 29, 32, 34, 35, 42, 45, 46, 47, 51], "10": [2, 12, 23, 31, 34, 35, 47, 50, 51], "100": [2, 31, 43, 47, 51], "100mm": 51, "1024": 45, "10mm": 51, "11": [32, 35], "14": 51, "17": 51, "18": 34, "2": [2, 4, 10, 23, 26, 29, 33, 35, 42, 45, 46, 47, 51], "2023": [29, 30, 31, 32], "2024": [33, 34], "2025": 51, "21776f2cceba": 51, "22": [29, 33], "24": 35, "3": [2, 4, 26, 35, 42, 50, 51], "30": 31, "4": [4, 26, 29, 33, 51], "4152": 51, "45": 2, "49": 51, "4a2d": 51, "4e3aaaa20dd5": 51, "5": [2, 26, 47, 51], "51": 51, "55": 51, "6": [26, 35, 51], "67": 47, "7": [26, 51], "7195": 51, "79": 31, "8": [26, 51], "80": 31, "81c3": 51, "88": 31, "9": [26, 51], "90": 31, "A": [2, 7, 14, 20, 32, 35, 42, 44, 45], "AS": 2, "As": [26, 28], "At": [33, 34, 35], "But": 35, "For": [2, 12, 26, 29, 30, 33, 43, 44, 45, 47, 51], "If": [2, 10, 20, 23, 32, 37, 42, 43, 44, 45, 46, 50, 51], "In": [2, 30, 31, 35, 37, 46, 47, 51], "It": [2, 20, 31, 34, 36, 38, 41, 43, 45, 47, 50, 51], "Its": 45, "No": 45, "ON": 34, "ONE": 34, "Of": 2, "Or": 2, "The": [2, 4, 10, 20, 23, 28, 30, 32, 33, 34, 35, 36, 37, 41, 42, 44, 45, 46, 47, 50, 51], "Their": 33, "Then": 30, "There": [29, 33, 47, 51], "These": [2, 29, 30, 33, 38], "To": [2, 27, 36, 44, 46, 51], "With": 32, "_": 2, "__init__": [2, 30, 32, 35, 42, 44, 45], "__name__": 45, "__version__": 1, "_aioca": 30, "_arm_statu": [2, 45, 46], "_backend": 30, "_block": 33, "_control": [33, 45], "_core_io": [4, 6, 7, 9], "_core_writ": [4, 6, 7, 9], "_ctxt": 45, "_dataset": 45, "_describ": 45, "_detector": [2, 33], "_devic": [30, 33], "_drv": [45, 46], "_file": 45, "_flyer": 33, "_hdf_writer": [4, 6, 7, 9], "_io": 33, "_mock": 33, "_multipli": 45, "_name_provid": 45, "_notify_watchers_from": 51, "_p4p": 30, "_path_provid": 45, "_pattern_detector": 33, "_pilatus_control": 7, "_protocol": 33, "_provid": [4, 6, 7, 9], "_rbv": 10, "_readabl": 33, "_set_success": 44, "_signal": [4, 5, 6, 7, 9, 30, 33, 46], "_signal_ref": 34, "_sim_motor": 33, "_statu": 33, "_tabl": 33, "_update_dataset": 45, "_util": 5, "_writer": [33, 45], "ab": 44, "abc": [2, 4, 6, 7, 9, 34], "abl": [32, 36], "about": [2, 32, 33, 45], "abov": [27, 32, 34, 42, 51], "abs_chang": 23, "absolut": [2, 12], "abstract": [2, 29, 45], "acceler": 12, "accept": [27, 28, 29, 31, 32, 33, 34, 35], "access": [2, 42], "accord": 33, "accumul": 2, "achiev": 46, "acquir": [2, 45], "acquire_rbv": 2, "acquire_tim": 45, "acquisit": 38, "across": [33, 47], "action": 2, "activ": [45, 50], "ad": [2, 45], "ad_driv": 30, "adapp": 5, "adbasedatasetdescrib": 45, "adbaseio": 45, "adcor": [4, 6, 7, 9, 33, 45], "add": [2, 20, 34, 35, 42, 44, 51], "add_children_as_read": [2, 35, 42, 44], "add_read": [2, 35], "addit": [29, 31, 33, 38, 44, 45, 47], "addition": 45, "additionalproperti": 2, "addr": 5, "address": 45, "addriv": 5, "addriverio": 33, "adhdfwrit": [4, 6, 7, 9, 33, 45], "adher": 31, "adopt": 26, "adpilatu": 33, "adpilatusio": 33, "adr": [26, 27, 33], "adsrc": 5, "advers": 31, "adwrit": [4, 6, 7, 9], "affect": 31, "after": [2, 29, 37, 47], "aggreg": 2, "alarm_sever": 47, "algorithm": 36, "alik": 32, "all": [2, 20, 29, 30, 32, 35, 37, 38, 43, 44, 45, 47, 51], "allow": [2, 34, 36, 38, 42, 45, 47], "along": [2, 47], "alreadi": [2, 37, 51], "also": [31, 34, 36, 43, 44, 47, 50, 51], "altern": 32, "although": 51, "alwai": [2, 35, 45], "an": [2, 4, 5, 6, 9, 11, 23, 33, 35, 36, 37, 38, 42, 44, 46, 47, 51], "analog": 45, "ani": [2, 20, 29, 31, 33, 34, 42, 43, 44, 47, 50], "annot": [2, 32, 35], "anoth": [2, 42, 44, 46], "ansi": 2, "ansitowin32": 2, "anyof": [2, 12], "api": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 42, 44, 45, 47, 48, 51], "append": [10, 42, 44, 47], "appli": [20, 30, 35, 42, 44], "applic": [2, 36], "apply_plan": 20, "apply_set": 20, "apply_settings_if_differ": 20, "approach": [32, 35, 46], "appropri": 41, "approv": 29, "approx": 47, "ar": [2, 20, 26, 29, 31, 32, 33, 34, 38, 43, 44, 45, 47, 51], "araviscamera": 4, "aravisdetector": 4, "aravisdriverio": 4, "aravistriggermod": 4, "arbitrari": [2, 42], "architectur": 25, "areadetector": [5, 30, 46], "aren": 12, "arg": [2, 47, 51], "argument": [32, 44], "arm": [2, 45, 46], "arm_statu": 46, "around": [35, 36], "arrai": [2, 36, 42, 44, 45], "array1d": 2, "articl": 27, "asctim": 2, "ask": 43, "assert": [2, 47], "assert_called_once_with": [34, 47], "assert_emit": 47, "assert_read": 47, "assert_valu": 47, "assist": 45, "associ": [20, 51], "assum": [45, 51], "async": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 30, 32, 33, 34, 36, 42, 44, 45, 50, 51], "async_statu": 30, "asyncdeviceproxi": 23, "asyncgener": [2, 45], "asynchron": 23, "asyncio": [2, 37, 44, 45, 47, 51], "asyncio_mod": 47, "asynciter": [2, 45], "asyncread": 33, "asyncstag": 33, "asyncstatu": [2, 33, 34, 44, 45, 51], "attach_mock": 47, "attempt": 37, "attribut": [2, 23], "auto": [2, 47], "automat": 47, "avail": [32, 45], "await": [2, 23, 34, 44, 45, 47], "awar": 29, "ax": 36, "b": 2, "b466": 51, "back": [10, 23, 38], "backend": [2, 36], "backend_put": 34, "background": 37, "backward": 35, "base": [2, 14, 30, 35, 36, 41, 44, 45], "baseclass": 35, "basi": [42, 44, 45, 47, 51], "basic": 20, "bd6a6be7": 51, "bec": 51, "becaus": [35, 42, 47], "becom": [2, 29, 30, 47], "been": [2, 20, 29, 30, 32, 33, 34, 37, 45, 47, 50, 51], "befor": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 37, 42, 43, 44, 45, 46, 47, 51], "begin": 12, "beginn": 32, "behav": 47, "behavior": [2, 42, 45, 47], "behaviour": 47, "behind": 2, "being": [2, 30], "below": [2, 26, 46, 51], "best_effort": 51, "besteffortcallback": 51, "between": [2, 29, 30, 44], "big": 43, "bin": 50, "black": 26, "blank": 2, "bloat": 30, "block": [2, 36, 45], "blog": 26, "blueski": [2, 29, 30, 33, 36, 37, 38, 44, 50, 51], "blueskyproject": 38, "blxxi": 2, "bool": [2, 14, 23, 34, 45], "bool_": 34, "boolean": 2, "both": [2, 29], "bottom": 51, "boundari": [2, 4, 5, 7, 14], "bp": 47, "branch": 30, "breach": 12, "break": [34, 44, 47], "bug": 43, "build": [33, 36], "built": 36, "busi": 2, "c": 34, "ca": [2, 34], "cach": [2, 44, 45], "calcul": [1, 12, 45], "calculatabletimeout": 44, "calculate_timeout": [2, 12, 44], "call": [2, 32, 34, 37, 42, 44, 47, 51], "call_returns_result": 51, "callabl": [2, 20], "callback": [2, 44, 45, 47, 51], "callback_on_mock_put": 47, "cam1": [4, 6, 7, 9, 45], "can": [2, 28, 30, 32, 33, 35, 36, 37, 38, 42, 43, 44, 47, 50, 51], "cancel": 2, "cannot": 47, "capabl": 41, "captur": [34, 45, 46], "capture_mod": 45, "capture_t": 45, "capturemod": 45, "case": [30, 44, 47, 51], "casignalbackend": 33, "caught": 43, "cd": [28, 29], "chan": 32, "chang": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 29, 30, 33, 42, 43, 44, 45, 47, 51], "channelaccess": 36, "charact": [31, 33], "check": [2, 10, 23, 43, 47], "child": [2, 32, 42, 44, 45], "child_mock": 2, "child_name_separ": [2, 44], "children": [2, 45], "choic": [25, 31], "chunk": 45, "chunk_shap": [2, 45], "ci": [28, 29], "class": [2, 4, 5, 6, 7, 9, 10, 11, 12, 14, 23, 32, 33, 34, 35, 41, 42, 44, 45, 51], "classmethod": 2, "cleanli": 36, "clear_sub": 2, "clearli": 30, "client": 34, "close": [2, 20, 33, 43, 45], "co": [44, 45], "code": [2, 30, 31, 46, 51], "codebas": 29, "codecov": 30, "cohes": 30, "collabor": 29, "collect": [2, 4, 6, 7, 9, 20, 34, 45, 51], "collect_stream_doc": [2, 45], "collector": 25, "collid": 44, "collis": 45, "color": 2, "colorama": 2, "column": 34, "com": 50, "come": 32, "command": [23, 51], "commandlin": [50, 51], "commit": [29, 30, 43], "common": [2, 43, 51], "commonpandablock": [33, 45], "compar": 42, "comparison": 51, "compat": [35, 45], "complet": [2, 12, 20, 38, 42, 44, 46, 51], "complex": 45, "complic": [29, 44, 47], "compon": [2, 32, 42, 45, 51], "composit": 36, "compound": [40, 44, 45], "comput": 5, "concept": 2, "condit": 2, "config": [30, 32, 44, 51], "config_ophyd_async_log": 2, "config_sig": [2, 4, 6, 7, 9, 45], "config_sign": [2, 35, 44], "configsign": [33, 35], "configur": [2, 4, 31, 38, 43, 45, 47], "confirm": 47, "conflict": 30, "conform": 36, "confus": 29, "connect": [2, 23, 34, 37, 44, 45, 47, 51], "connect_r": 2, "connection_funct": 37, "connector": [2, 35, 45], "consid": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29], "consist": [28, 33, 45], "consol": 51, "const": 12, "constant": 2, "constant_g": [2, 45], "constraint": [2, 12], "construct": [2, 20, 42, 44, 45], "contain": [2, 20, 30, 33, 41, 43], "container": 43, "content": [33, 51], "context": [2, 45, 47, 51], "continu": 29, "contribut": [2, 29, 36, 40, 44], "control": [2, 29, 30, 33, 34, 36, 38, 45, 51], "convert": [2, 32, 33, 36, 45], "cookbook": 38, "copi": [27, 51], "copier": [26, 43], "core": [4, 5, 6, 7, 9, 30, 34, 35, 45, 47, 51], "coro": 2, "coroutin": [2, 44, 51], "correct": [32, 45], "correctli": 47, "correspond": [2, 33, 45], "cost": 32, "could": [28, 32, 33, 35, 44, 45], "count": 47, "coupl": 51, "creat": [2, 10, 20, 23, 27, 30, 32, 33, 36, 37, 40, 43, 44, 45], "create_children_from_annot": 2, "create_dir_depth": [2, 45], "create_directori": 45, "current": [2, 20, 29, 44, 45, 50], "current_posit": 44, "current_set": 20, "d": [2, 35, 45], "dark": 2, "dash": [33, 44], "data": [2, 34, 45, 46], "data_kei": [2, 45], "databas": 33, "datablock": 45, "dataclass": 2, "datakei": [2, 45], "dataset": [2, 45], "dataset_nam": 45, "datasheet": 42, "datatyp": [2, 5, 10, 23, 34, 44], "date": [2, 4, 29, 30, 31, 32, 33, 34, 35], "datefmt": 2, "db": [4, 6, 7, 9], "dbrtype": 5, "deadtim": [2, 4, 45], "dealt": 30, "debug": 2, "deceler": 12, "decid": [29, 30, 35], "decis": [25, 40], "declar": [2, 20, 26, 32], "decor": 47, "decoupl": 37, "def": [2, 32, 34, 35, 37, 42, 44, 45, 47], "default": [2, 5, 12, 31, 36, 45, 47, 51], "default_timeout": [44, 45, 46], "defaultdict": 47, "defin": [2, 29, 36, 42, 44, 45, 46], "definit": [5, 26, 35], "demo": [14, 30, 33, 42, 44, 51], "demonstr": 20, "depend": [46, 47, 50, 51], "deprec": 35, "depth": [2, 45], "deriv": 30, "describ": [2, 27, 32, 34, 45], "describe_configur": 2, "descript": [2, 5, 12], "descriptor": [2, 45, 47], "design": [25, 41, 46], "desir": 12, "det": 51, "det_group": 51, "det_old": 51, "detail": [29, 45], "detect": [2, 47], "detector": [2, 4, 6, 9, 11, 20, 33, 38, 45, 46], "detectorcontrol": [2, 33, 45], "detectorcontrollert": 2, "detectorst": 5, "detectortrigg": [2, 45], "detectorwrit": [2, 33, 45], "detectorwritert": 2, "determin": [2, 41], "dev": 47, "devcontain": 43, "develop": [28, 29, 36, 41], "devi": 29, "devic": [2, 12, 14, 20, 23, 25, 26, 29, 30, 33, 38, 40, 45, 49], "device1": 37, "device2": 37, "device3": 37, "device_collector": 30, "device_nam": 45, "device_proxi": 23, "device_vector": 30, "deviceconnector": 2, "deviceprocessor": 2, "deviceproxi": 23, "devicet": 2, "devicevector": [2, 32, 33, 35, 42], "devicewithreftosign": 2, "diamond": 43, "dict": [2, 4, 6, 7, 9, 45], "dictionari": [2, 42, 44], "diff": 31, "differ": [2, 20, 28, 47, 51], "dimension": 34, "dir": 45, "directli": [45, 47], "directori": [2, 30, 33, 45], "directory_exist": 45, "directory_path": [2, 45], "disabl": 31, "disarm": [2, 45], "discard": 2, "discuss": 36, "disrupt": 30, "distanc": 12, "divid": 33, "do": [2, 32, 35], "do_set": 44, "do_something_else_with": 2, "do_something_with": 2, "doc": [2, 30, 45, 47], "document": [2, 31, 38, 41, 47], "doe": [37, 42, 43, 44, 45], "don": [43, 44, 51], "done": [2, 4, 29, 44, 51], "done_statu": [2, 44], "done_timeout": 2, "dot": 2, "down": [12, 47], "downstream": 34, "driver": [4, 5, 34, 45, 46], "drop": [35, 45], "drv": [33, 45], "drv_suffix": [4, 6, 7, 9, 11, 45], "dtype": [2, 34, 45], "dtype_numpi": [2, 34, 45], "due": 2, "dure": [2, 30, 33, 45], "dynamicsensorgroup": 2, "e": [2, 33, 45, 47], "e0c3b436": 51, "e92": 51, "ea": 11, "each": [2, 30, 33, 42, 44, 51], "earli": 2, "easi": 36, "easier": 47, "easili": 43, "edge_trigg": 2, "egu": [12, 44], "eigerdetector": 11, "either": [37, 47], "elif": 2, "els": 45, "emit": [35, 47], "empti": [2, 42, 44, 45], "enabl": [36, 38], "encod": 45, "end": [2, 12, 30, 43, 47], "end_posit": 12, "energi": [14, 51], "energymod": [14, 32, 35, 44, 51], "enfor": 37, "engin": [37, 44, 51], "enhanc": 51, "ensur": [28, 35, 45, 46, 47], "entiti": 45, "entri": 2, "enum": [2, 35, 44, 45, 51], "enumclass": 44, "enumer": [44, 45], "environ": [28, 43], "envis": [29, 33], "epic": [29, 30, 36, 44, 45, 51], "epics_demo": 51, "epics_signal_r": [10, 32, 35, 44], "epics_signal_rw": [10, 32, 33, 34, 35, 44], "epics_signal_rw_rbv": [10, 45], "epics_signal_w": 10, "epics_signal_x": [10, 44], "epicsdeclarativedevic": 35, "epicsdevic": [32, 35, 44], "epicsproceduraldevic": 35, "epicssign": [32, 51], "epicssignalro": [32, 51], "epicssuffix": 35, "equal": [2, 46], "equival": [2, 35, 42], "error": [2, 44], "error_hint": 45, "especi": 30, "etc": [33, 42], "even": [29, 31, 34], "event": [25, 44, 47], "eventu": [29, 30], "everi": 20, "everyth": 34, "exactli": 45, "exampl": [2, 32, 42, 44, 45, 47, 51], "exceed": 31, "except": [2, 30, 44, 45, 51], "exclud": 12, "exclusiveminimum": [2, 12], "execut": [2, 23, 44, 51], "exist": [2, 27, 30, 36, 43, 45, 49, 50], "exit": [2, 47], "exit_statu": 51, "expand": 2, "expect": [2, 34, 47], "expens": 2, "experi": 30, "experienc": 40, "experiment": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "explain": 51, "explicit": 32, "expos": [45, 51], "exposur": [2, 20, 45], "extend": [23, 44, 45], "extens": 2, "extern": [2, 4, 38, 45, 47], "extra": [2, 42, 51], "f": [2, 32, 35, 42, 45], "f8": 45, "factori": 2, "fail": [2, 37, 45], "fake_set_sign": 34, "fals": [2, 14, 23, 44, 45, 46, 51], "far": 34, "fashion": 34, "fastc": [34, 35], "fastcs_connector": 45, "faster": 2, "featur": [50, 51], "fetch": [4, 45], "few": [45, 51], "field": [2, 12, 34, 45], "file": [2, 7, 30, 31, 33, 41, 43, 45], "fileio_suffix": [4, 6, 7, 9], "filenam": [2, 45], "filenameprovid": 2, "filewrit": 45, "fill": 36, "filter": 30, "final": [2, 12, 34, 44, 47, 51], "find": [31, 32], "finish": [12, 45], "firmwar": 4, "first": [37, 44, 45, 51], "fit": 43, "fix": [28, 33, 42], "fixtur": [33, 47], "flag": 35, "flat": [2, 33], "flavour": 2, "float": [2, 12, 20, 23, 32, 34, 35, 44, 45], "float32": 34, "float64": [34, 45], "flow": 20, "flowchart": 40, "flush": 45, "flush_period": 45, "fly": [2, 12, 20], "fly_and_collect": 20, "flyabl": 20, "flyer": [20, 38], "flyercontrol": 33, "flymotorinfo": 12, "flyscan": [2, 20, 25, 33, 36], "fmt": 2, "folder": 30, "follow": [2, 28, 30, 33, 34, 37, 51], "foo": [2, 45], "foocontrol": 45, "foodetector": 45, "foodevic": 2, "foodriv": 45, "footriggersourc": 45, "force_reconnect": 2, "forev": 45, "form": 4, "format": [2, 28, 35, 36, 44], "forth": 38, "found": 31, "fraction": 2, "frame": [2, 45], "frame_timeout": [2, 20], "free": [43, 47], "from": [2, 5, 12, 20, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 44, 45, 47, 50, 51], "full": 38, "full_file_nam": 2, "fulli": 46, "function": [2, 33, 41, 45, 46], "further": [42, 44], "fusion": 30, "futur": 32, "g": [2, 33, 45, 47], "gate": 2, "gather": [44, 45], "ge": 2, "gener": [2, 4, 20, 23, 31, 45, 46], "genicam": 4, "get": [2, 12, 42, 44, 45, 51], "get_datakei": 2, "get_deadtim": [2, 45], "get_dtyp": 2, "get_enum_cl": 2, "get_indices_written": [2, 45], "get_mock_put": [33, 47], "get_read": 2, "get_setpoint": 2, "get_uniqu": 2, "get_valu": [2, 44, 45, 47], "getlogg": 2, "gigevis": 4, "git": [29, 30, 50], "git_blame_ignore_rev": 30, "github": [29, 36, 43, 50], "gitignor": 30, "give": [34, 51], "given": [2, 10, 20, 23, 36, 45, 47], "glob": 30, "glossari": 38, "go": [30, 35], "goal": 25, "gpio": 4, "gpio_numb": 4, "great": 43, "greater": 32, "grid_scan": 51, "group": [2, 44], "grow": 36, "grown": 29, "gt": [2, 12], "guarante": 45, "guid": [41, 43, 44], "h": [2, 5], "h5": 45, "ha": [2, 29, 30, 33, 34, 37, 44, 45, 47, 50, 51], "hand": 38, "handl": [38, 43, 45], "handler": [2, 44], "happen": 31, "happi": 35, "harder": 31, "hardwar": [2, 20, 29, 36, 45, 51], "hardwaretriggeredfly": 33, "hashint": [2, 45], "have": [2, 20, 28, 29, 30, 31, 32, 34, 35, 43, 44, 45, 51], "hdf": [7, 33, 45], "hdf1": 45, "hdf5": 2, "hdf_directori": 45, "hdf_file_nam": 45, "hdf_suffix": [11, 45], "hdfdataset": [2, 45], "hdffile": [2, 45], "hdfpanda": 45, "help": [41, 51], "helper": [36, 47], "here": [2, 33, 42, 45, 47, 49, 51], "hide": 2, "hierarchi": 33, "high": [2, 14, 51], "higher": 2, "hint": [2, 32, 45, 51], "hinted_sign": [2, 35, 44], "hinted_uncached_sign": [2, 35], "hintedsign": [33, 35], "histori": [29, 30], "hold": [2, 47], "hook": [43, 47], "hostnam": 2, "how": [2, 25, 30, 34, 43, 45, 51], "howev": [29, 30], "html": 38, "http": [38, 50], "i": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 32, 33, 35, 37, 38, 42, 43, 44, 45, 46, 47, 50, 51], "id": [2, 51], "idea": 43, "idl": 2, "ie": 44, "ignor": [20, 44], "ii": [6, 45], "imag": [2, 5], "image_mod": 45, "imagemod": 45, "immedi": 45, "implement": [2, 4, 6, 9, 11, 30, 33, 38, 44, 45, 51], "import": [2, 30, 32, 33, 34, 35, 51], "improv": 43, "in_micro": 2, "includ": [2, 12, 33, 35, 42, 44, 45, 47, 48, 51], "incompat": 45, "increas": [2, 29], "increment": 30, "index": [2, 45, 48], "index_at_least_": 45, "indic": [2, 42], "indices_written": [2, 45], "individu": [33, 51], "info": [2, 45], "inform": [2, 12, 26, 38, 44, 45, 47], "inherit": 41, "ini_opt": 47, "init": [32, 42, 44], "init_devic": [2, 37, 47, 51], "initi": [2, 10, 23, 30, 37, 44, 45, 46, 47], "initial_backend": 2, "initial_valu": 2, "initialis": [2, 37, 45], "instal": 49, "instanc": [2, 29, 33, 44, 45, 51], "instant": 20, "instanti": [32, 51], "instead": [2, 32, 42, 43], "instruct": 46, "int": [2, 5, 20, 32, 34, 35, 42, 44, 45], "int16": 34, "int32": 34, "int64": 34, "int8": [2, 34], "integ": [2, 42], "integr": 41, "interact": 51, "interest": 5, "interfac": [2, 4, 6, 7, 9, 33, 36, 50, 51], "interfer": 50, "intern": [2, 33, 45, 47], "interrupt": [44, 51], "introspect": 2, "invoc": 2, "involv": 43, "io": [33, 38], "ioc": [34, 35, 45, 51], "ion": 51, "isclos": 44, "ish": 31, "issu": [29, 34, 35, 36], "item": 2, "iter": 2, "its": [2, 10, 20, 23, 29, 33, 42, 43, 44, 45, 50, 51], "itself": [2, 51], "job": [29, 38], "json": [2, 12], "just": [2, 20, 51], "keep": [26, 30, 36], "kei": 29, "kept": 30, "kick": 20, "kickoff": [12, 20, 38], "kind": [32, 51], "kinetixdetector": 6, "kinetixdriverio": 6, "kwarg": [2, 47], "label": 36, "lambda": [2, 45, 47], "languag": 36, "larger": [42, 44], "last": 2, "later": 50, "latest": 28, "layer": [42, 44, 45], "lazili": 2, "lazymock": 2, "leaf": 2, "learnabl": 32, "least": [34, 35, 45], "leav": 2, "left": 33, "len": 45, "length": [2, 26, 42], "less": 32, "level": [1, 2, 33, 42, 51], "levelnam": 2, "librari": [29, 30, 31, 41, 43, 47], "licenc": 30, "licens": 30, "lifetim": 26, "light": 43, "like": [2, 29, 31, 33, 35, 36, 42, 43, 44, 47, 51], "limit": 12, "line": 26, "lineno": 2, "link": 27, "lint": [28, 31], "list": [2, 20, 26, 42, 45, 47], "liter": [2, 4, 12], "littl": 30, "live": [29, 33], "livetim": 2, "load": [2, 34, 45], "localhost": 2, "locat": [2, 23], "log": [2, 45], "log_color": 2, "logger": 2, "logic": [2, 33, 36, 42, 44, 45, 47], "long": [2, 31], "look": [32, 35], "loop": [2, 25, 35], "low": [14, 51], "lowercas": 33, "m": [2, 7, 50], "made": [26, 27, 34], "magic": [32, 51], "mai": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 32, 33, 42, 44, 45, 47, 51], "mailmap": 30, "maintain": [29, 42], "major": 29, "make": [2, 31, 32, 33, 34, 40, 42, 43, 47, 51], "mako": 4, "manag": [2, 28, 32, 51], "mani": 2, "manta": 4, "manual": 45, "map": [2, 33, 45], "mark": [12, 45, 47], "master": [30, 36], "match": [2, 33, 47], "match_sign": [2, 46], "match_valu": [2, 46], "matcher": 45, "materi": 48, "matplotlib": 51, "maximum": [2, 12], "mean": [29, 32, 34, 36, 42, 44], "mechan": [2, 36, 38], "member": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 19, 20, 21, 23, 24, 34, 35], "memori": 47, "merg": [29, 30], "messag": [2, 30], "metaclass": 32, "metadata": 2, "method": [2, 20, 35, 41, 42, 44, 45], "michael": [26, 27], "microsecond": 2, "might": [36, 43], "migrat": [26, 36], "mind": 32, "minim": [2, 12, 32], "minimum": 2, "minimum_panda_ioc": 45, "minor": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 42, 44, 45, 47, 51], "minu": 12, "mirror": [4, 6, 7, 9], "mix": 51, "mo": 2, "mobil": 41, "mock": [2, 34, 51], "mock_cal": [2, 47], "mock_mov": 47, "mock_sensor": 47, "mocksignalbackend": [2, 33], "mode": [2, 14, 32, 35, 44, 51], "model": [2, 4, 7, 12, 36, 47], "model_rbv": 4, "modifi": [2, 30, 51], "modul": [2, 4, 5, 7, 14, 28, 33, 36, 51], "modular": 38, "monitor": [2, 10, 23, 38, 44], "more": [2, 20, 26, 30, 38, 40, 43, 44, 47], "most": [2, 31, 42, 43], "motion": [30, 36], "motor": [2, 30, 33, 36, 44, 45], "mount": 23, "mov": 51, "movabl": [14, 42], "move": [2, 12, 14, 30, 33, 36, 44, 45, 47, 51], "mover": [14, 35, 42, 44, 47, 51], "mover_setpoint_mock": 47, "mover_velocity_mock": 47, "movr": 51, "msec": 2, "msg": [20, 44, 45], "multipl": [2, 20, 36, 45], "multipli": [2, 45], "must": [4, 34, 36, 37, 44, 45], "mv": 51, "mvr": 51, "my_devic": 2, "my_plan": 51, "my_sensor_group": 42, "my_sign": 2, "mydevic": [2, 34, 35], "myenum": 34, "mysubsetenum": 34, "name": [2, 4, 5, 6, 7, 9, 10, 11, 12, 14, 20, 23, 32, 33, 34, 35, 42, 44, 45, 47, 51], "name_provid": 45, "nameprovid": 45, "namespac": [33, 45], "ndarrai": [2, 44, 45], "ndattributedatatyp": 5, "ndattributeparam": 5, "ndattributepv": 5, "ndattributepvdbrtyp": 5, "ndfilehdfio": [33, 45], "ndplugin": 45, "ndpluginbaseio": [4, 6, 7, 9], "ndpluginfil": 45, "ndpluginstatsio": 5, "nearest": 2, "neatli": [30, 31], "necessari": [2, 38], "necessarili": 34, "need": [2, 20, 27, 29, 34, 35, 36, 43, 44, 50, 51], "nest": [42, 44], "new": [2, 27, 34, 35, 37, 40, 43, 49], "new_devic": 23, "new_posit": 44, "next": [45, 51], "nice": 2, "none": [2, 4, 5, 6, 7, 9, 10, 12, 14, 20, 23, 32, 33, 35, 42, 44, 45, 47, 51], "noqa": 51, "normal": 35, "notconnect": 2, "note": [2, 48, 51], "noth": 2, "notic": 31, "now": [30, 32, 50, 51], "np": [2, 44], "npt": 2, "nsl": [6, 45], "null": [2, 12], "num": [2, 32, 45, 47], "num_captur": [2, 45], "num_imag": 45, "num_valu": 35, "number": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 31, 33, 42, 43, 44, 45, 47, 51], "number_of_fram": 20, "number_of_trigg": 2, "numpi": [2, 44], "numpy_dtyp": 2, "numpy_t": 2, "nygard": [26, 27], "o": [2, 45], "obj": 2, "object": [2, 12, 23, 34, 44, 45, 47, 51], "observ": [2, 44], "observe_indices_written": [2, 45], "observe_sign": 33, "observe_signals_valu": 2, "observe_valu": [2, 44, 45], "obviou": 43, "occur": [42, 44, 46], "odin": [11, 33], "off": [2, 20], "offer": 43, "old": [34, 35, 44], "old_posit": 44, "oldsensor": [32, 51], "onc": [2, 12, 45, 46], "one": [20, 33, 35, 37, 43, 44], "ones": [27, 47, 51], "onli": [2, 35, 44, 45, 46, 47, 51], "open": [2, 20, 43, 45], "oper": [2, 23, 46], "ophyd": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 30, 32, 33, 34, 37, 41, 42, 44, 45, 47, 50, 51], "ophyd_async": [30, 33, 34, 35, 40, 44, 45, 51], "ophyd_polling_period": 23, "opt": 2, "optim": 41, "option": [2, 23, 32, 44, 45], "order": [20, 47], "ordin": 45, "organ": [29, 36], "organis": 30, "origin": [29, 30], "oserror": 45, "other": [2, 33, 35, 44, 47], "other_licens": 30, "otherwis": [2, 10, 23, 45], "our": [36, 47], "out": [2, 47, 51], "outer": [36, 38], "outlin": 41, "output": [2, 44, 51], "over": [29, 31, 38], "overal": 2, "overrid": [32, 41, 45], "own": [2, 29, 31, 36, 43, 45, 51], "p": 2, "packag": [26, 28], "panda": [30, 33, 36, 38, 45], "panda_data_block": 45, "pandablock": [34, 35, 45], "pandahdfwrit": [33, 45], "pandapcapcontrol": [33, 45], "parallel": [2, 44, 51], "param": 5, "paramet": [2, 10, 20, 23, 36, 46, 51], "parent": [2, 44, 47], "parent_mock": [2, 47], "part": [2, 45], "particular": 36, "pass": [2, 32, 37, 42, 44, 45, 51], "past": 27, "patch": 47, "path": [2, 30, 33, 45, 50], "path_prefix": 2, "path_provid": [4, 6, 7, 9, 11, 45], "pathinfo": 2, "pathprovid": [4, 6, 7, 9, 11, 45], "pattern": [2, 30, 45], "patterndetector": 33, "paus": 36, "pcap": 45, "pcapblock": 45, "pcompinfo": 20, "peculiar": 31, "pend": 30, "peopl": 31, "per": [2, 7, 31, 33, 45], "perfom": 44, "perform": 36, "period": 20, "persist": [2, 45, 51], "pick": 45, "piec": 36, "pilatu": 7, "pilatus3": 7, "pilatuscontrol": 33, "pilatusdetector": 7, "pilatusdriverio": 7, "pilatusreadouttim": 7, "pip": [28, 30, 50], "place": [29, 43, 51], "plan": [2, 20, 33, 35], "plan_result": 51, "plan_stub": 51, "pleas": [34, 36, 43], "plot": 51, "plt": 51, "plug": 33, "plugin": [4, 5, 6, 7, 9, 45], "pmac": 36, "point": [2, 35, 45], "poke": 44, "popular": 31, "port": 4, "posit": [2, 12, 36, 44, 45, 51], "positioncaptur": 45, "possibl": [33, 36, 38, 42, 47], "possibli": 44, "pr": 29, "practic": 40, "pre": [30, 43], "prec": 44, "precis": [2, 44], "prefer": [35, 46], "prefix": [4, 5, 6, 7, 9, 11, 12, 14, 32, 33, 35, 37, 42, 44, 45, 51], "prepar": [2, 4, 12, 20, 33, 45, 46], "prepare_static_seq_table_flyer_and_detectors_with_same_trigg": 20, "present": [2, 29, 31, 34], "preserv": [29, 30], "prevent": 45, "previou": 2, "previous": 2, "primari": [44, 51], "primit": 44, "prior": [4, 37], "privat": 33, "probabl": [31, 33], "proc": 44, "procedur": 26, "process": [2, 30, 41, 51], "produc": [2, 14, 31, 35, 38, 44], "programmat": 51, "progress": [38, 44], "progressbar": 51, "progressbarmanag": 51, "project": [2, 26, 27, 40, 47], "prompt": 51, "propag": 2, "proper": 23, "properti": [2, 12, 45], "propos": 33, "protocol": [2, 36, 38, 44, 45], "provid": [2, 4, 6, 7, 9, 20, 23, 36, 38, 47], "provision": [29, 42, 44, 45, 47, 51], "proxi": 23, "public": 33, "publish": 2, "pull": [28, 43], "purpos": 51, "put": [2, 44, 45, 47], "pv": [2, 10, 33, 34, 41, 44, 45, 51], "pv_prefix": [2, 32, 51], "pv_suffix": 32, "pva": [2, 34], "pvi": 36, "pvsuffix": [10, 35, 44], "py": [30, 33, 44, 46, 51], "pydant": [2, 12, 34], "pypa": 1, "pyplot": 51, "pyproject": 47, "pytest": 47, "python": [2, 26, 33, 43, 44, 51], "python3": [30, 50], "qualnam": [2, 4, 5, 7, 14], "quantum": 38, "question": 43, "quickli": 47, "quit": 30, "r": 2, "rais": [2, 43, 44, 45], "rang": [32, 35, 42], "rare": 2, "rate": [2, 36], "rather": [34, 42], "rd": [42, 44, 51], "re": [37, 47, 51], "reach": [12, 33, 46], "read": [2, 10, 20, 23, 32, 34, 35, 41, 42, 44, 45, 47, 51], "read_configur": [2, 32, 44], "read_pv": 10, "read_suffix": 10, "read_trl": 23, "readabl": [2, 23, 32], "readback": [2, 10, 38, 44, 51], "readi": [2, 45, 46], "readout": 7, "readout_tim": 7, "real": [2, 47], "reason": [2, 29, 51], "recent": 2, "recommend": [2, 43, 45, 50], "record": [2, 12, 25], "recurs": 47, "reduc": 43, "ref": 2, "refer": [2, 33, 34], "referencedevic": 34, "regard": [30, 32], "region": 5, "regist": [2, 51], "register_transform": 51, "regular": 51, "reimport": 33, "rel": 51, "rel_chang": 23, "relationship": 2, "releas": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 42, 44, 45, 47, 48, 50, 51], "relev": [29, 30, 45], "remain": 43, "rememb": 31, "remov": 2, "renam": [2, 33, 44], "repeat": [20, 47], "replac": [2, 29, 30], "repo": 30, "repositori": [26, 29, 31, 33, 43], "repres": [34, 38], "represent": 45, "request": [2, 43, 44], "requir": [2, 4, 12, 20, 29, 33, 35, 37, 45, 47, 50], "resolut": [30, 31], "resolv": 36, "resourc": [23, 45], "respect": [26, 29], "respons": 2, "rest": 44, "restrict": 34, "result": [34, 51], "resum": 36, "retain": 47, "retriev": [2, 20, 45, 47], "retrieve_set": 20, "return": [2, 34, 42, 44, 45, 46, 47], "revert": 29, "review": 31, "revisit": 32, "root": 30, "round": 2, "routin": 44, "row": 34, "run": [2, 12, 20, 29, 36, 37, 43, 44], "run_engin": 51, "run_start_uid": 51, "runengin": [37, 45, 51], "runengineresult": 51, "runtim": 2, "runtimeerror": 44, "rw": 2, "safeti": 32, "sai": [2, 42], "same": [2, 20, 29, 30, 34, 36, 37, 43, 44, 45, 51], "samp": 51, "sampl": [14, 38, 42, 44, 51], "sample_stag": [42, 44], "samplestag": [14, 42, 44, 51], "save": [2, 34], "scalar": [14, 35, 44, 45], "scan": [2, 4, 20, 36, 38, 41, 45], "scanspec": 36, "schema": [2, 12], "scientif": 45, "scope": 43, "screen": 31, "script": 30, "second": [2, 12, 51], "section": 51, "see": [2, 5, 26, 27, 29, 36, 38, 43, 46, 47, 51], "seem": 31, "seen": 34, "select": [2, 30], "self": [2, 32, 34, 35, 42, 44, 45, 46], "semant": 42, "sens": [33, 42], "sensibl": [34, 42, 47], "sensor": [14, 32, 35, 42, 44, 47, 51], "sensor_1": 42, "sensor_2": 42, "sensor_count": [35, 42], "sensorgroup": [32, 35, 42, 51], "sent": 2, "separ": [2, 29, 36], "seqblock": 33, "seqtableinfo": 20, "sequenc": [2, 4, 6, 7, 9, 20, 44, 45], "seri": [2, 41], "serial": 34, "serializ": 34, "serv": 36, "server": 23, "set": [2, 5, 12, 20, 28, 31, 32, 36, 42, 43, 44, 45, 46, 47, 51], "set_and_wait_for_other_valu": [2, 40], "set_and_wait_for_valu": 2, "set_callback": 2, "set_mock_valu": 47, "set_nam": [2, 44, 51], "set_readable_sign": 32, "set_sign": 2, "set_timeout": 2, "set_valu": 2, "setattr": 32, "setpoint": [2, 44, 47], "settingsprovid": 20, "settl": 26, "setup": [2, 28, 33], "setuptools_scm": 1, "sever": [2, 47], "shape": [2, 45], "share": [33, 37, 43], "ship": 38, "shortcut": 51, "shorter": 31, "shorthand": 51, "shortli": 33, "should": [2, 20, 23, 28, 29, 30, 31, 32, 33, 34, 35, 36, 44, 45, 46, 47, 50, 51], "show": [2, 12, 29, 44, 51], "shutter_tim": 20, "side": 31, "sig": 2, "sig1": [2, 35], "sig2": [2, 35], "sig3": 35, "sight": 31, "signal": [2, 5, 20, 23, 26, 30, 32, 33, 36, 38, 42, 44, 45, 46, 47], "signal_backend": 30, "signal_ref": 2, "signalbackend": [2, 32, 33], "signaldatatypet": [2, 10, 23], "signaldatatypev": 2, "signalr": [2, 4, 5, 6, 7, 9, 10, 23, 32, 35, 44, 45], "signalrw": [2, 10, 20, 23, 32, 34, 35, 44], "signals_added_to": 32, "signalw": [2, 10, 23, 51], "signalx": [2, 10, 23], "significantli": [31, 43], "sim": [30, 35, 44, 47, 51], "sim_sensor": 47, "similar": [29, 47], "simmotor": 33, "simpl": [30, 40, 45, 51], "simpli": [45, 47], "simul": [33, 51], "sinc": [30, 35, 47], "singl": [2, 33], "sink": 29, "site": 33, "situat": 35, "size": [33, 45], "skeleton": 30, "slice": 2, "slide": 31, "slight": 35, "slightli": 51, "slow": 2, "snippet": 46, "so": [2, 33, 34, 36, 42, 45, 50, 51], "soft": [2, 34], "soft_signal_r_and_sett": [2, 34], "soft_signal_rw": [2, 34], "softsignalbackend": 2, "softwar": 50, "some": [2, 29, 32, 33, 34, 35, 42, 44, 47], "someon": [32, 47], "someth": 43, "sometim": 42, "somewher": 2, "soon": 44, "sort": [2, 33, 34], "sourc": [2, 4, 5, 6, 7, 9, 10, 11, 12, 14, 20, 23, 43, 45, 50], "sourcedevic": 34, "spec": 38, "special": 33, "specif": [20, 33, 34, 45, 51], "specifi": [2, 35, 36, 46, 47], "spend": 43, "src": [30, 44], "stage": [2, 14, 20, 42, 44, 51], "stageabl": 2, "standard": [4, 20, 31, 44, 45], "standarddetector": [2, 7, 20, 33, 40], "standardfly": [20, 33], "standardread": [2, 23, 32, 33, 42, 44], "standardreadableformat": 2, "start": [2, 4, 5, 7, 12, 14, 44, 45, 47, 49, 51], "start_acquiring_driver_and_ensure_statu": 45, "start_ioc_subprocess": 51, "start_posit": 12, "stash": [2, 45], "state": [2, 5, 30, 45, 46], "statement": 51, "static": [20, 42], "statist": 5, "statu": [2, 44, 45], "status_timeout": 2, "stdout": 2, "step": [2, 35, 40], "stepscan": 2, "stick": [31, 32], "still": [2, 29, 44], "stop": [2, 44, 47], "stop_": [44, 47], "stop_busy_record": 45, "stoppabl": 44, "store": [2, 20, 29, 44], "store_set": 20, "str": [1, 2, 4, 5, 6, 7, 9, 10, 11, 12, 14, 20, 23, 32, 35, 42, 44, 45], "stream": [2, 4, 20, 45], "stream_data": 45, "stream_datum": [2, 45], "stream_nam": 20, "stream_resourc": [2, 45], "streamasset": 45, "streamdatum": 2, "streamresourc": 2, "streamwrapp": 2, "strictenum": [2, 44], "string": [2, 12, 35, 51], "structur": [26, 29], "stub": [20, 33], "sub": [26, 47], "subclass": [33, 44], "subdevic": 45, "subdivid": 30, "submodul": [1, 3, 16, 22, 30], "subpackag": 33, "subprocess": 51, "subscrib": [2, 47, 51], "subscribe_valu": 2, "subscript": 2, "subsequ": 2, "subset": 34, "subsetenum": 2, "success": [2, 44, 51], "successfulli": 44, "successor": 29, "succinct": 32, "suffix": [10, 33, 42, 44, 45], "suggest": 33, "suit": 43, "suitabl": [34, 35, 44], "super": [2, 32, 35, 42, 44, 45], "superclass": [32, 42, 44], "superset": 20, "suppli": 20, "support": [2, 4, 29, 33, 35, 36, 38, 45], "support_ev": 23, "sure": [43, 45], "switch": 28, "swmr": 2, "sy": 2, "sync": 2, "syncdeviceproxi": 23, "synchron": 23, "system": [2, 29, 30, 34, 38, 41, 51], "t": [2, 12, 23, 43, 44, 51], "t1x": 2, "t1y": 2, "tab": 51, "tabl": [2, 20, 34, 45], "tag": 29, "take": [2, 20, 29, 44, 47, 51], "taken": 12, "talk": [31, 36], "tango": [29, 30, 34, 35, 36, 51], "tango_devic": 23, "tango_signal_r": [23, 35], "tango_signal_rw": [23, 35], "tango_signal_w": 23, "tango_signal_x": 23, "tangoconnector": 35, "tangodeclarativedevic": 35, "tangodevic": [23, 35], "tangopol": 23, "tangoproceduraldevic": 35, "tangoread": 23, "target": [2, 29, 44], "task": [2, 43, 51], "technic": [45, 48], "techniqu": 28, "tell": [33, 44, 45], "templat": [4, 6, 7, 9, 26, 33, 43], "termin": 50, "test": [2, 29, 30, 33, 35, 40, 43], "test_mover_stop": 47, "test_retrieve_mock_and_assert": 47, "test_sensor_in_plan": 47, "test_sensor_reading_shows_valu": 47, "text": 51, "than": [2, 31, 42], "thei": [2, 29, 30, 33, 34, 37, 45, 47, 51], "them": [2, 20, 29, 32, 33, 36, 42, 47], "theori": 29, "thi": [2, 4, 6, 7, 9, 10, 20, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 46, 47, 50, 51], "thing": 51, "those": [2, 45], "three": [29, 30], "through": [2, 36, 41, 43, 51], "throughout": 26, "ti": 45, "ticket": 43, "tile": 34, "time": [2, 7, 12, 29, 33, 36, 43, 44, 51], "time_elaps": 2, "time_for_mov": 12, "time_remain": 2, "time_resolved_fly_and_collect_with_static_seq_t": 20, "timeout": [2, 12, 23, 44, 45, 46, 51], "timeouterror": 2, "timestamp": [2, 47], "titl": [2, 12], "tmp": 2, "todo": 45, "togeth": [2, 40, 45], "toml": 47, "too": 51, "tool": [28, 31, 34, 47], "top": [1, 2, 33, 51], "total_number_of_trigg": 2, "toward": 35, "traceback": 2, "track": [26, 29], "trail": 44, "transform": 51, "transient": 51, "transit": [30, 46], "translat": 51, "tree": [2, 42], "trigger": [2, 4, 10, 20, 36, 38, 44, 45], "trigger_info": [2, 45], "trigger_mod": 45, "triggerinfo": [2, 20, 33, 45], "triggermod": 45, "triggersourc": 45, "trl": 23, "true": [2, 34, 44, 45, 46, 47, 51], "try": 44, "tupl": 2, "turn": 2, "turnaround": 36, "tutori": [14, 33, 51], "two": [29, 34, 35, 45, 47], "txt": [2, 30], "type": [2, 4, 5, 6, 7, 9, 10, 12, 14, 23, 26, 32, 35, 36, 44, 50, 51], "typeerror": [2, 45], "typic": [23, 31, 49], "u": [45, 51], "ugli": 35, "uint16": [34, 44], "uint32": 34, "uint64": 34, "uint8": 34, "unabl": 37, "uncach": [2, 35], "uncached_sign": 2, "under": 33, "underli": [2, 29, 33, 36, 51], "underscor": [33, 44], "understand": 34, "understood": 34, "unifi": 2, "union": 23, "uniqu": [45, 51], "unit": [2, 44], "unittest": 47, "univers": 36, "unless": 37, "unstag": [2, 20, 44], "until": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 35, 38, 42, 44, 45, 46, 47, 51], "up": [2, 4, 12, 32, 36, 43, 45, 51], "updat": [2, 28, 45], "upon": [33, 36], "us": [2, 4, 10, 20, 23, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 42, 43, 44, 45, 46, 47, 49, 50], "usag": [2, 23, 37, 49], "user": [30, 37, 40, 45, 49], "user_v1": 30, "usual": 45, "util": [30, 46, 51], "v": [2, 26, 47], "v1": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 42, 44, 45, 47, 51], "v2": [29, 30], "valid": [2, 44, 47], "validate_array_dtyp": 2, "validate_length": 2, "valu": [2, 4, 5, 7, 10, 12, 14, 20, 23, 32, 34, 35, 41, 44, 45, 46, 47, 51], "valueerror": [2, 44, 45], "variabl": [2, 41, 51], "variable_g": [2, 45], "variable_nam": 2, "varieti": 38, "variou": [2, 33], "veloc": [12, 14, 32, 36, 42, 44, 47, 51], "venv": [28, 50], "verb": [2, 33], "verbos": [2, 32, 51], "veri": [30, 38, 47, 51], "verifi": [2, 47], "version": [1, 29, 45], "via": [36, 38, 42], "view": 36, "vimba": 9, "vimbadetector": 9, "vimbadriverio": 9, "vscode": 43, "w": 2, "wa": [2, 29, 30, 31, 43, 44], "wai": [25, 26, 30, 32, 35, 36, 47], "wait": [2, 34, 44, 45, 46, 47, 51], "wait_for": [2, 44], "wait_for_connect": 2, "wait_for_idl": [2, 45], "wait_for_index": 45, "wait_for_set_complet": [2, 46], "wait_for_valu": [2, 45], "waiting_hook": 51, "walk": 20, "walk_rw_sign": 2, "want": [2, 37, 43], "warn": [2, 35, 45], "watch": 2, "watchableasyncstatu": [2, 12, 33, 44, 51], "watcher": [2, 44], "watcherupd": [2, 44], "we": [2, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 43, 45, 47, 51], "welcom": 43, "well": 29, "were": 29, "what": [2, 34], "what_is_happen": 2, "when": [2, 23, 29, 32, 34, 37, 43, 44, 45, 46, 47], "where": [2, 32, 33, 34], "whether": [35, 44], "which": [2, 4, 20, 29, 31, 33, 34, 35, 36, 44, 45, 46, 47], "while": [20, 33, 34, 43], "whole": 2, "why": 25, "width": 2, "wise": [31, 34], "with_pvi": 14, "within": [2, 5, 37, 41, 47, 51], "without": [33, 36, 44, 47], "work": [2, 25, 31], "world": 47, "would": [2, 29, 35, 42, 44], "wrap": [2, 44], "writabl": [2, 45], "write": [2, 7, 10, 23, 32, 33, 34, 35, 36, 38, 40, 41, 42, 51], "write_pv": 10, "write_suffix": 10, "write_trl": 23, "writer": [2, 33, 45], "writer_cl": [4, 6, 7, 9], "written": [2, 45, 51], "wth": 20, "x": [2, 14, 29, 34, 35, 42, 44, 51], "y": [2, 14, 35, 42, 44, 51], "yaml": 30, "year": 29, "yield": [2, 44, 45], "yml": 30, "you": [2, 31, 32, 34, 42, 43, 44, 47, 50, 51], "your": [43, 47, 51], "zebra": [36, 38], "zero": 44, "zerodivisionerror": 44, "zip": 2}, "titles": ["API", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ophyd_async</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ophyd_async.core</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ophyd_async.epics</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ophyd_async.epics.adaravis</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ophyd_async.epics.adcore</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ophyd_async.epics.adkinetix</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ophyd_async.epics.adpilatus</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ophyd_async.epics.adsimdetector</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ophyd_async.epics.advimba</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ophyd_async.epics.core</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ophyd_async.epics.eiger</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ophyd_async.epics.motor</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ophyd_async.epics.signal</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ophyd_async.epics.sim</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ophyd_async.epics.testing</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ophyd_async.fastcs</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ophyd_async.fastcs.core</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ophyd_async.fastcs.odin</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ophyd_async.fastcs.panda</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ophyd_async.plan_stubs</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ophyd_async.sim</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ophyd_async.tango</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ophyd_async.tango.core</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ophyd_async.tango.sim</span></code>", "Explanations", "Architectural Decision Records", "1. Record architecture decisions", "2. Adopt python-copier-template for project structure", "3. Ophyd Async migration", "4. Repository Structure", "5. Respect black line length", "6. Procedural Device Definitions", "7. Sub-package Structure", "8. Settle on Signal Types", "9. Procedural vs Declarative Devices", "Design Goals", "Device Collector Event-Loop Choice", "Flyscanning", "API Index", "How-to Guides", "Decision Flowchart for Creating a New ophyd_async Device", "Compound Devices Together", "Contribute to the project", "Make a Simple Device", "Make a StandardDetector", "<code class=\"docutils literal notranslate\"><span class=\"pre\">set_and_wait_for_other_value</span></code>", "Write Tests for Devices", "Reference", "Tutorials", "Installation", "Using existing Devices"], "titleterms": {"1": 27, "1d": 34, "2": 28, "3": 29, "4": 30, "5": 31, "6": 32, "7": 33, "8": 34, "9": 35, "__init__": 34, "adaravi": 4, "adcor": 5, "adkinetix": 6, "adopt": 28, "adpilatu": 7, "adsimdetector": 8, "advimba": 9, "all": 34, "an": [34, 45], "api": [0, 39], "ar": 35, "arbitrari": 34, "architectur": [26, 27], "areadetector": 45, "arrai": 34, "array1d": 34, "assembli": [42, 44], "async": [29, 37, 38, 47], "attach": 34, "avail": 35, "backend": [34, 47], "basemodel": 34, "behavior": 46, "black": 31, "calcul": 36, "can": 34, "case": 34, "chang": [34, 35], "check": [34, 50], "child": 34, "children": 34, "choic": 37, "clean": 36, "code": 43, "collector": 37, "compound": 42, "consequ": [27, 28, 29, 30, 31, 32, 33, 34, 35], "context": [27, 28, 29, 30, 31, 32, 33, 34, 35, 37], "contribut": 43, "copier": 28, "core": [2, 10, 17, 23, 33], "coverag": 43, "creat": [41, 50, 51], "decis": [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 41], "declar": 35, "definit": [32, 36], "design": 36, "develop": 43, "devic": [32, 34, 35, 36, 37, 41, 42, 44, 47, 51], "diagram": 46, "discuss": 43, "do": 51, "eiger": 11, "enum": 34, "environ": 50, "epic": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 33, 35], "event": 37, "exampl": 46, "exist": 51, "explan": 25, "fastc": [16, 17, 18, 19, 33], "file": 51, "flowchart": 41, "flyscan": 38, "function": 47, "get_mock_put": 34, "goal": 36, "group": 42, "guid": 40, "handl": 34, "hardwar": 38, "how": 40, "i": 34, "improv": 36, "index": [39, 42], "inform": 43, "instal": 50, "instead": 34, "ipython": 51, "issu": 43, "length": 31, "librari": 50, "line": 31, "longer": 34, "loop": 37, "make": [44, 45], "malcolm": 36, "migrat": 29, "mock": 47, "mocksignalbackend": 34, "modul": 35, "more": 34, "motor": 12, "movabl": 44, "move": 35, "ndarrai": 34, "new": 41, "non": 45, "now": [34, 35], "np": 34, "npt": 34, "numpi": 34, "odin": 18, "one": 34, "ophyd": [29, 36, 38], "ophyd_async": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 41], "outstand": 36, "packag": 33, "panda": 19, "parent": 34, "pariti": 36, "pass": 34, "pend": 34, "plan": [47, 51], "plan_stub": 20, "planstub": 33, "primit": 34, "procedur": [32, 35], "project": [28, 43], "public": 34, "pvi": [34, 35], "python": [28, 34, 50], "readabl": 44, "real": 34, "record": [26, 27], "refer": 48, "repositori": 30, "requir": 34, "requri": 34, "respect": 31, "role": 38, "run": 51, "runengin": 47, "scalar": 34, "scan": 51, "sequenc": 34, "set": 34, "set_and_wait_for_other_valu": 46, "settl": 34, "signal": [13, 34, 35], "sim": [14, 21, 24, 33], "simpl": 44, "some": 51, "standarddetector": 45, "standardread": 35, "standardreadableformat": 35, "startup": 51, "statu": [27, 28, 29, 30, 31, 32, 33, 34, 35], "str": 34, "str_": 34, "strictenum": 34, "strictli": 34, "string": 34, "structur": [28, 30, 33, 34, 35], "sub": 33, "subclass": 34, "subsetenum": 34, "super": 34, "support": 34, "sync": 37, "t": 34, "tango": [22, 23, 24, 33], "templat": 28, "test": [15, 47], "than": 34, "them": 34, "timeout": 34, "togeth": 42, "trajectori": 36, "tutori": 49, "type": 34, "us": [34, 51], "usag": 46, "util": 47, "v": 35, "version": 50, "virtual": 50, "wrapper": 35, "write": [45, 47], "your": 50}})