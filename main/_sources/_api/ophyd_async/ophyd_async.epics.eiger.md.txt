# {py:mod}`ophyd_async.epics.eiger`

```{py:module} ophyd_async.epics.eiger
```

```{autodoc2-docstring} ophyd_async.epics.eiger
:parser: ophyd_async._docs_parser
:allowtitles:
```

## Package Contents

### Classes

````{list-table}
:class: autosummary longtable
:align: left

* - {py:obj}`EigerDetector <ophyd_async.epics.eiger._eiger.EigerDetector>`
  - ```{autodoc2-docstring} ophyd_async.epics.eiger._eiger.EigerDetector
    :parser: ophyd_async._docs_parser
    :summary:
    ```
* - {py:obj}`EigerController <ophyd_async.epics.eiger._eiger_controller.EigerController>`
  - ```{autodoc2-docstring} ophyd_async.epics.eiger._eiger_controller.EigerController
    :parser: ophyd_async._docs_parser
    :summary:
    ```
* - {py:obj}`EigerDriverIO <ophyd_async.epics.eiger._eiger_io.EigerDriverIO>`
  - ```{autodoc2-docstring} ophyd_async.epics.eiger._eiger_io.EigerDriverIO
    :parser: ophyd_async._docs_parser
    :summary:
    ```
* - {py:obj}`EigerTriggerInfo <ophyd_async.epics.eiger._eiger.EigerTriggerInfo>`
  -
````

### API

`````{py:class} EigerDetector(prefix: str, path_provider: ~ophyd_async.core.PathProvider, drv_suffix='-EA-EIGER-01:', hdf_suffix='-EA-ODIN-01:', name='')
:canonical: ophyd_async.epics.eiger._eiger.EigerDetector

Bases: {py:obj}`ophyd_async.core.StandardDetector`

```{autodoc2-docstring} ophyd_async.epics.eiger._eiger.EigerDetector
:parser: ophyd_async._docs_parser
```

````{py:method} prepare(value: ~ophyd_async.epics.eiger._eiger.EigerTriggerInfo) -> None
:canonical: ophyd_async.epics.eiger._eiger.EigerDetector.prepare
:async:

````

`````

`````{py:class} EigerController(driver: ~ophyd_async.epics.eiger._eiger_io.EigerDriverIO)
:canonical: ophyd_async.epics.eiger._eiger_controller.EigerController

Bases: {py:obj}`ophyd_async.core.DetectorController`

```{autodoc2-docstring} ophyd_async.epics.eiger._eiger_controller.EigerController
:parser: ophyd_async._docs_parser
```

````{py:method} get_deadtime(exposure: float | None) -> float
:canonical: ophyd_async.epics.eiger._eiger_controller.EigerController.get_deadtime

````

````{py:method} set_energy(energy: float, tolerance: float = 0.1)
:canonical: ophyd_async.epics.eiger._eiger_controller.EigerController.set_energy
:async:

```{autodoc2-docstring} ophyd_async.epics.eiger._eiger_controller.EigerController.set_energy
:parser: ophyd_async._docs_parser
```

````

````{py:method} prepare(trigger_info: ~ophyd_async.core.TriggerInfo)
:canonical: ophyd_async.epics.eiger._eiger_controller.EigerController.prepare
:async:

````

````{py:method} arm()
:canonical: ophyd_async.epics.eiger._eiger_controller.EigerController.arm
:async:

````

````{py:method} wait_for_idle()
:canonical: ophyd_async.epics.eiger._eiger_controller.EigerController.wait_for_idle
:async:

````

````{py:method} disarm()
:canonical: ophyd_async.epics.eiger._eiger_controller.EigerController.disarm
:async:

````

`````

````{py:class} EigerDriverIO(prefix: str, name: str = '')
:canonical: ophyd_async.epics.eiger._eiger_io.EigerDriverIO

Bases: {py:obj}`ophyd_async.core.Device`

```{autodoc2-docstring} ophyd_async.epics.eiger._eiger_io.EigerDriverIO
:parser: ophyd_async._docs_parser
```

````

`````{py:class} EigerTriggerInfo(/, **data: ~typing.Any)
:canonical: ophyd_async.epics.eiger._eiger.EigerTriggerInfo

Bases: {py:obj}`ophyd_async.core.TriggerInfo`

````{py:attribute} energy_ev
:canonical: ophyd_async.epics.eiger._eiger.EigerTriggerInfo.energy_ev
:type: float
:value: >
   'Field(...)'

```{autodoc2-docstring} ophyd_async.epics.eiger._eiger.EigerTriggerInfo.energy_ev
:parser: ophyd_async._docs_parser
```

````

`````
