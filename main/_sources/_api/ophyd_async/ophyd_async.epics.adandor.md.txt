# {py:mod}`ophyd_async.epics.adandor`

```{py:module} ophyd_async.epics.adandor
```

```{autodoc2-docstring} ophyd_async.epics.adandor
:parser: ophyd_async._docs_parser
:allowtitles:
```

## Package Contents

### Classes

````{list-table}
:class: autosummary longtable
:align: left

* - {py:obj}`Andor2Detector <ophyd_async.epics.adandor._andor.Andor2Detector>`
  - ```{autodoc2-docstring} ophyd_async.epics.adandor._andor.Andor2Detector
    :parser: ophyd_async._docs_parser
    :summary:
    ```
* - {py:obj}`Andor2Controller <ophyd_async.epics.adandor._andor_controller.Andor2Controller>`
  - ```{autodoc2-docstring} ophyd_async.epics.adandor._andor_controller.Andor2Controller
    :parser: ophyd_async._docs_parser
    :summary:
    ```
* - {py:obj}`Andor2DriverIO <ophyd_async.epics.adandor._andor_io.Andor2DriverIO>`
  - ```{autodoc2-docstring} ophyd_async.epics.adandor._andor_io.Andor2DriverIO
    :parser: ophyd_async._docs_parser
    :summary:
    ```
````

### API

````{py:class} Andor2Detector(prefix: str, path_provider: ~ophyd_async.core.PathProvider, drv_suffix='cam1:', writer_cls: type[~ophyd_async.epics.adcore.ADWriter] = adcore.ADHDFWriter, fileio_suffix: str | None = None, name: str = '', config_sigs: ~collections.abc.Sequence[~ophyd_async.core._signal.SignalR] = (), plugins: dict[str, ~ophyd_async.epics.adcore.NDPluginBaseIO] | None = None)
:canonical: ophyd_async.epics.adandor._andor.Andor2Detector

Bases: {py:obj}`ophyd_async.epics.adcore.AreaDetector`\[{py:obj}`ophyd_async.epics.adandor._andor_controller.Andor2Controller`\]

```{autodoc2-docstring} ophyd_async.epics.adandor._andor.Andor2Detector
:parser: ophyd_async._docs_parser
```

````

`````{py:class} Andor2Controller(driver: ~ophyd_async.epics.adandor._andor_io.Andor2DriverIO, good_states: frozenset[~ophyd_async.epics.adcore.ADState] = adcore.DEFAULT_GOOD_STATES)
:canonical: ophyd_async.epics.adandor._andor_controller.Andor2Controller

Bases: {py:obj}`ophyd_async.epics.adcore.ADBaseController`\[{py:obj}`ophyd_async.epics.adandor._andor_io.Andor2DriverIO`\]

```{autodoc2-docstring} ophyd_async.epics.adandor._andor_controller.Andor2Controller
:parser: ophyd_async._docs_parser
```

````{py:method} get_deadtime(exposure: float | None) -> float
:canonical: ophyd_async.epics.adandor._andor_controller.Andor2Controller.get_deadtime

````

````{py:method} prepare(trigger_info: ~ophyd_async.core.TriggerInfo)
:canonical: ophyd_async.epics.adandor._andor_controller.Andor2Controller.prepare
:async:

````

`````

````{py:class} Andor2DriverIO(prefix: str, name: str = '')
:canonical: ophyd_async.epics.adandor._andor_io.Andor2DriverIO

Bases: {py:obj}`ophyd_async.epics.adcore.ADBaseIO`

```{autodoc2-docstring} ophyd_async.epics.adandor._andor_io.Andor2DriverIO
:parser: ophyd_async._docs_parser
```

````
