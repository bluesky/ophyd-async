// For format details, see https://containers.dev/implementors/json_reference/
{
    "name": "Python 3 Developer Container",
    "build": {
        "dockerfile": "../Dockerfile",
        "target": "developer"
    },
    "remoteEnv": {
        // Allow X11 apps to run inside the container
        "DISPLAY": "${localEnv:DISPLAY}",
        // We put venv on a different volume to cache so have to copy
        "UV_LINK_MODE": "copy",
        // Do the equivalent of "activate" the venv so we don't have to "uv run" everything
        "PATH": "/workspaces/${localWorkspaceFolderBasename}/.venv/bin:${localEnv:PATH}"
    },
    "customizations": {
        "vscode": {
            // Set *default* container specific settings.json values on container create.
            "settings": {
                "python.defaultInterpreterPath": "/workspaces/${localWorkspaceFolderBasename}/.venv/bin/python",
                "python.terminal.activateEnvInCurrentTerminal": false,
                "python.terminal.activateEnvironment": false,
                "python.testing.unittestEnabled": false,
                "python.testing.pytestEnabled": true,
                "editor.formatOnSave": true,
                "editor.codeActionsOnSave": {
                    "source.organizeImports": "explicit"
                },
                "remote.autoForwardPorts": false,
                "[python]": {
                    "editor.defaultFormatter": "charliermarsh.ruff"
                }
            },
            // Add the IDs of extensions you want installed when the container is created.
            "extensions": [
                "ms-python.python",
                "github.vscode-github-actions",
                "tamasfe.even-better-toml",
                "redhat.vscode-yaml",
                "ryanluker.vscode-coverage-gutters",
                "charliermarsh.ruff",
                "ms-azuretools.vscode-docker"
            ]
        }
    },
    // Create the config folder for the bash-config feature and uv cache
    "initializeCommand": "mkdir -p ${localEnv:HOME}/.config/terminal-config ${localEnv:HOME}/.cache/uv",
    "runArgs": [
        // Allow the container to access the host X11 display and EPICS CA
        "--net=host",
        // Make sure SELinux does not disable with access to host filesystems like tmp
        "--security-opt=label=disable"
    ],
    // Populate the user's terminal config folder with default config if it is blank
    "onCreateCommand": "/root/terminal-config/ensure-user-terminal-config.sh",
    "mounts": [
        // Mount in the user terminal config folder so it can be edited
        {
            "source": "${localEnv:HOME}/.config/terminal-config",
            "target": "/user-terminal-config",
            "type": "bind"
        },
        // Keep a persistent cross container cache for uv
        {
            "source": "${localEnv:HOME}/.cache/uv",
            "target": "/root/.cache/uv",
            "type": "bind"
        },
        // Use a volume mount for the uv venv so it is local to the container
        {
            "target": "/workspaces/${localWorkspaceFolderBasename}/.venv",
            "type": "volume"
        }
    ],
    // Mount the parent as /workspaces so we can pip install peers as editable
    "workspaceMount": "source=${localWorkspaceFolder}/..,target=/workspaces,type=bind",
    // After the container is created, install the python project in editable form
    "postCreateCommand": "uv sync && uv run pre-commit install"
}
