record(waveform, "$(device)int8a") {
  field(NELM, "7")
  field(FTVL, "CHAR")
  field(INP, {const:[-128, 127, 0, 1, 2, 3, 4]})
  field(PINI, "YES")
}

record(waveform, "$(device)uint16a") {
  field(NELM, "7")
  field(FTVL, "USHORT")
  field(INP, {const:[0, 65535, 0, 1, 2, 3, 4]})
  field(PINI, "YES")
}

record(waveform, "$(device)uint32a") {
  field(NELM, "7")
  field(FTVL, "ULONG")
  field(INP, {const:[0, 4294967295, 0, 1, 2, 3, 4]})
  field(PINI, "YES")
}

record(waveform, "$(device)int64a") {
  field(NELM, "7")
  field(FTVL, "INT64")
  # limit of range appears to be +/-(2^63 - 1)
  field(INP, {const:[-9223372036854775807, 9223372036854775807, 0, 1, 2, 3, 4]})
  field(PINI, "YES")
}

record(waveform, "$(device)uint64a") {
  field(NELM, "7")
  field(FTVL, "UINT64")
  # limit of range appears to be 0 to +(2^63 - 1)
  field(INP, {const:[0, 9223372036854775807, 0, 1, 2, 3, 4]})
  field(PINI, "YES")
}

record(waveform, "$(device)table:labels") {
    field(FTVL, "STRING")
    field(NELM, "5")
    field(INP, {const:["Bool", "Int", "Float", "Str", "Enum"]})
    field(PINI, "YES")
    info(Q:group, {
        "$(device)table": {
            "+id": "epics:nt/NTTable:1.0",
            "labels": {
                "+type": "plain",
                "+channel": "VAL"
            }
        }
    })
}

record(waveform, "$(device)table:bool")
{
    field(FTVL, "UCHAR")
    field(NELM, "4096")
    field(INP, {const:[false, false, true, true]})
    field(PINI, "YES")
    info(Q:group, {
        "$(device)table": {
            "value.a_bool": {
                "+type": "plain",
                "+channel": "VAL",
                "+putorder": 1
            }
        }
    })
}

record(waveform, "$(device)table:int")
{
    field(FTVL, "LONG")
    field(NELM, "4096")
    field(INP, {const:[1, 8, -9, 32]})
    field(PINI, "YES")
    info(Q:group, {
        "$(device)table": {
            "value.a_int": {
                "+type": "plain",
                "+channel": "VAL",
                "+putorder": 2
            }
        }
    })
}

record(waveform, "$(device)table:float")
{
    field(FTVL, "DOUBLE")
    field(NELM, "4096")
    field(INP, {const:[1.8, 8.2, -6, 32.9887]})
    field(PINI, "YES")
    info(Q:group, {
        "$(device)table": {
            "value.a_float": {
                "+type": "plain",
                "+channel": "VAL",
                "+putorder": 3
            }
        }
    })
}

record(waveform, "$(device)table:str")
{
    field(FTVL, "STRING")
    field(NELM, "4096")
    field(INP, {const:["Hello", "World", "Foo", "Bar"]})
    field(PINI, "YES")
    info(Q:group, {
        "$(device)table": {
            "value.a_str": {
                "+type": "plain",
                "+channel": "VAL",
                "+putorder": 4
            }
        }
    })
}

record(waveform, "$(device)table:enum")
{
    field(FTVL, "STRING")
    field(NELM, "4096")
    field(INP, {const:["Aaa", "Bbb", "Aaa", "Ccc"]})
    field(PINI, "YES")
    info(Q:group, {
        "$(device)table": {
            "value.a_enum": {
                "+type": "plain",
                "+channel": "VAL",
                "+putorder": 5,
                "+trigger": "*",
            },
            "": {"+type": "meta", "+channel": "VAL"}
        }
    })
}

record(longout, "$(device)ntndarray:ArraySize0_RBV") {
    field(VAL, "3")
    field(PINI, "YES")
    info(Q:group, {
        "$(device)ntndarray":{
            "dimension[0].size":{+channel:"VAL", +type:"plain", +putorder:0}
        }
    })
}

record(longout, "$(device)ntndarray:ArraySize1_RBV") {
    field(VAL, "2")
    field(PINI, "YES")
    info(Q:group, {
        "$(device)ntndarray":{
            "dimension[1].size":{+channel:"VAL", +type:"plain", +putorder:0}
        }
    })
}

record(waveform, "$(device)ntndarray:data")
{
  field(FTVL, "INT64")
  field(NELM, "6")
  field(INP, {const:[0, 0, 0, 0, 0, 0]})
  field(PINI, "YES")
  info(Q:group, {
        "$(device)ntndarray":{
            +id:"epics:nt/NTNDArray:1.0",
            "value":{
                +type:"any",
                +channel:"VAL",
                +trigger:"*",
            },
            "": {+type:"meta", +channel:"SEVR"}
        }
    })
}
